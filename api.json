{
  "openapi": "3.0.1",
  "info": {
    "title": "Klippa DocHorizon",
    "description": "This is the documentation of the Klippa DocHorizon REST API.",
    "version": "v1.5.3-2ea80b6d"
  },
  "servers": [
    {
      "url": "https://dochorizon.klippa.com",
      "description": "Klippa DocHorizon Platform API Production"
    }
  ],
  "paths": {
    "/api/services/auth/v1/info": {
      "get": {
        "tags": [
          "Auth API"
        ],
        "summary": "Info about used key",
        "description": "Returns information about the currently used key. Useful for testing an API key and checking it's capabilities.",
        "operationId": "auth-info",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthAuthInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "On input validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100002,
                  "errormessage": "unsupported Content-Type",
                  "requestid": "1235"
                }
              }
            }
          },
          "401": {
            "description": "On unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100003,
                  "errormessage": "API key invalid or no API key provided",
                  "requestid": "1235"
                }
              }
            }
          },
          "500": {
            "description": "On internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100001,
                  "errormessage": "Request to the Document Capture failed",
                  "requestid": "1235"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/document_capturing/v1/enabled_models": {
      "get": {
        "tags": [
          "Document Capturing API"
        ],
        "summary": "List enabled models",
        "description": "This endpoint allows the user to list the available models for document capturing.",
        "operationId": "document-capturing-list-enabled-models",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document_capturingListEnabledModelsResponse"
                }
              }
            }
          },
          "400": {
            "description": "On input validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100002,
                  "errormessage": "unsupported Content-Type",
                  "requestid": "1235"
                }
              }
            }
          },
          "401": {
            "description": "On unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100003,
                  "errormessage": "API key invalid or no API key provided",
                  "requestid": "1235"
                }
              }
            }
          },
          "500": {
            "description": "On internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100001,
                  "errormessage": "Request to the Document Capture failed",
                  "requestid": "1235"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/document_capturing/v1/financial": {
      "post": {
        "tags": [
          "Financial Document Capturing API"
        ],
        "summary": "Capture financial document",
        "description": "This endpoint allows the user to submit a document to be captured with the financial model.",
        "operationId": "document-capturing-financial",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Document-Capturing-FinancialInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialResponse"
                }
              }
            }
          },
          "400": {
            "description": "On input validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100002,
                  "errormessage": "unsupported Content-Type",
                  "requestid": "1235"
                }
              }
            }
          },
          "401": {
            "description": "On unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100003,
                  "errormessage": "API key invalid or no API key provided",
                  "requestid": "1235"
                }
              }
            }
          },
          "500": {
            "description": "On internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100001,
                  "errormessage": "Request to the Document Capture failed",
                  "requestid": "1235"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/document_capturing/v1/financial/async": {
      "get": {
        "tags": [
          "Financial Document Capturing API"
        ],
        "summary": "Get a list of jobs from the financial document capturer",
        "description": "This endpoint returns a list of jobs. It returns when a job was created, what the current status is and the ID of said job. For the filtering on status the following values can be used (both on their own or in parameter array): in_queue, processing, hitl, done, error, closed and rejected.",
        "operationId": "document-capturing-financial-async-job-list",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "This parameter will set the maximum amount of items returned in a request.",
            "schema": {
              "type": "integer",
              "description": "This parameter will set the maximum amount of items returned in a request.",
              "format": "int32",
              "default": 25,
              "example": 50
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "With this parameter you can set the offset at which the items will begin. This can be helpful for paginating the items if there are too many.",
            "schema": {
              "type": "integer",
              "description": "With this parameter you can set the offset at which the items will begin. This can be helpful for paginating the items if there are too many.",
              "format": "int32",
              "default": 0,
              "example": 0
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "With this parameter you can filter based on the current status of a job and get all results with that filter.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "in_queue",
                  "processing",
                  "hitl",
                  "done",
                  "error",
                  "closed",
                  "rejected"
                ]
              },
              "description": "With this parameter you can filter based on the current status of a job and get all results with that filter."
            },
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncJobListResponse"
                }
              }
            }
          },
          "400": {
            "description": "On input validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100002,
                  "errormessage": "unsupported Content-Type",
                  "requestid": "1235"
                }
              }
            }
          },
          "401": {
            "description": "On unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100003,
                  "errormessage": "API key invalid or no API key provided",
                  "requestid": "1235"
                }
              }
            }
          },
          "500": {
            "description": "On internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100001,
                  "errormessage": "Request to the Document Capture failed",
                  "requestid": "1235"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Financial Document Capturing API"
        ],
        "summary": "Capture financial document asynchronously",
        "description": "This endpoint allows the user to submit a document to be captured with the financial model to process them asynchronously. It will return a ID that is linked to a job. This ID is what we will use in other requests to identify your documents with. The webhooks are optional to use, so if you do not want to use them you do not have to include that portion of the request.",
        "operationId": "document-capturing-financial-async",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Document-Capturing-Financial-AsyncInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncJobIDResponse"
                }
              }
            }
          },
          "400": {
            "description": "On input validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100002,
                  "errormessage": "unsupported Content-Type",
                  "requestid": "1235"
                }
              }
            }
          },
          "401": {
            "description": "On unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100003,
                  "errormessage": "API key invalid or no API key provided",
                  "requestid": "1235"
                }
              }
            }
          },
          "500": {
            "description": "On internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100001,
                  "errormessage": "Request to the Document Capture failed",
                  "requestid": "1235"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/document_capturing/v1/financial/async/{job_id}": {
      "get": {
        "tags": [
          "Financial Document Capturing API"
        ],
        "summary": "Get status of the financial document capture async job",
        "description": "This endpoint gives back the current status of the financial document capture async job.",
        "operationId": "document-capturing-financial-async-job-status",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "description": "The Job ID that was given back on the initial request to the async capturing endpoint.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The Job ID that was given back on the initial request to the async capturing endpoint."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncJobStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "On input validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100002,
                  "errormessage": "unsupported Content-Type",
                  "requestid": "1235"
                }
              }
            }
          },
          "401": {
            "description": "On unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100003,
                  "errormessage": "API key invalid or no API key provided",
                  "requestid": "1235"
                }
              }
            }
          },
          "500": {
            "description": "On internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100001,
                  "errormessage": "Request to the Document Capture failed",
                  "requestid": "1235"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Financial Document Capturing API"
        ],
        "summary": "Remove or cancel the financial document capture async job",
        "description": "This endpoint deletes the financial document capture async job results and other related documents from our servers. It will also cancel the job if it still needs to be processed and is waiting in the queue",
        "operationId": "document-capturing-financial-async-job-delete",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "description": "The Job ID that was given back on the initial request to the async capturing endpoint.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The Job ID that was given back on the initial request to the async capturing endpoint."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSuccess"
                }
              }
            }
          },
          "400": {
            "description": "On input validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100002,
                  "errormessage": "unsupported Content-Type",
                  "requestid": "1235"
                }
              }
            }
          },
          "401": {
            "description": "On unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100003,
                  "errormessage": "API key invalid or no API key provided",
                  "requestid": "1235"
                }
              }
            }
          },
          "500": {
            "description": "On internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100001,
                  "errormessage": "Request to the Document Capture failed",
                  "requestid": "1235"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/document_capturing/v1/financial/async/{job_id}/logs": {
      "get": {
        "tags": [
          "Financial Document Capturing API"
        ],
        "summary": "Get logs of the financial document capture async job",
        "description": "This endpoint will return a list of logs we gathered from the financial document capture async job. It will mostly contain status changes and information on errors to debug on the client side or to be passed along to support",
        "operationId": "document-capturing-financial-async-job-logs",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "description": "The Job ID that was given back on the initial request to the async capturing endpoint.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The Job ID that was given back on the initial request to the async capturing endpoint."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "This parameter will set the maximum amount of items returned in a request.",
            "schema": {
              "type": "integer",
              "description": "This parameter will set the maximum amount of items returned in a request.",
              "format": "int32",
              "default": 25,
              "example": 50
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "With this parameter you can set the offset at which the items will begin. This can be helpful for paginating the items if there are too many.",
            "schema": {
              "type": "integer",
              "description": "With this parameter you can set the offset at which the items will begin. This can be helpful for paginating the items if there are too many.",
              "format": "int32",
              "default": 0,
              "example": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncJobLogResponse"
                }
              }
            }
          },
          "400": {
            "description": "On input validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100002,
                  "errormessage": "unsupported Content-Type",
                  "requestid": "1235"
                }
              }
            }
          },
          "401": {
            "description": "On unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100003,
                  "errormessage": "API key invalid or no API key provided",
                  "requestid": "1235"
                }
              }
            }
          },
          "500": {
            "description": "On internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100001,
                  "errormessage": "Request to the Document Capture failed",
                  "requestid": "1235"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/document_capturing/v1/financial/async/{job_id}/result": {
      "get": {
        "tags": [
          "Financial Document Capturing API"
        ],
        "summary": "Get results of the financial document capture async job",
        "description": "This endpoint returns the results of the financial document capture async job.",
        "operationId": "document-capturing-financial-async-job-result",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "description": "The Job ID that was given back on the initial request to the async capturing endpoint.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The Job ID that was given back on the initial request to the async capturing endpoint."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialResponse"
                }
              }
            }
          },
          "400": {
            "description": "On input validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100002,
                  "errormessage": "unsupported Content-Type",
                  "requestid": "1235"
                }
              }
            }
          },
          "401": {
            "description": "On unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100003,
                  "errormessage": "API key invalid or no API key provided",
                  "requestid": "1235"
                }
              }
            }
          },
          "500": {
            "description": "On internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100001,
                  "errormessage": "Request to the Document Capture failed",
                  "requestid": "1235"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/document_capturing/v1/financial/presets": {
      "get": {
        "tags": [
          "Financial Document Capturing API"
        ],
        "summary": "List document capturing presets for the finance model",
        "description": "This endpoint allows the user to list the available presets for the financial model.",
        "operationId": "document-capturing-financial-list-presets",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document_capturingListPresetsResponse"
                }
              }
            }
          },
          "400": {
            "description": "On input validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100002,
                  "errormessage": "unsupported Content-Type",
                  "requestid": "1235"
                }
              }
            }
          },
          "401": {
            "description": "On unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100003,
                  "errormessage": "API key invalid or no API key provided",
                  "requestid": "1235"
                }
              }
            }
          },
          "500": {
            "description": "On internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100001,
                  "errormessage": "Request to the Document Capture failed",
                  "requestid": "1235"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/document_capturing/v1/financial/schema": {
      "get": {
        "tags": [
          "Financial Document Capturing API"
        ],
        "summary": "Get the JSON schema of the financial model",
        "description": "Get the JSON schema of the financial model.",
        "operationId": "document-capturing-financial-schema",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document_capturingSchemaResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/document_capturing/v1/generic": {
      "post": {
        "tags": [
          "Generic Document Capturing API"
        ],
        "summary": "Capture generic document",
        "description": "This endpoint allows the user to submit a document to be captured with the generic model. This endpoint turns a document into generic structured data. We extract key-value pairs and tables. The output is in JSON.",
        "operationId": "document-capturing-generic",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Document-Capturing-GenericInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                }
              }
            }
          },
          "400": {
            "description": "On input validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100002,
                  "errormessage": "unsupported Content-Type",
                  "requestid": "1235"
                }
              }
            }
          },
          "401": {
            "description": "On unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100003,
                  "errormessage": "API key invalid or no API key provided",
                  "requestid": "1235"
                }
              }
            }
          },
          "500": {
            "description": "On internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100001,
                  "errormessage": "Request to the Document Capture failed",
                  "requestid": "1235"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/document_capturing/v1/generic/async": {
      "get": {
        "tags": [
          "Generic Document Capturing API"
        ],
        "summary": "Get a list of jobs from the generic document capturer",
        "description": "This endpoint returns a list of jobs. It returns when a job was created, what the current status is and the ID of said job. For the filtering on status the following values can be used (both on their own or in parameter array): in_queue, processing, hitl, done, error, closed and rejected.",
        "operationId": "document-capturing-generic-async-job-list",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "This parameter will set the maximum amount of items returned in a request.",
            "schema": {
              "type": "integer",
              "description": "This parameter will set the maximum amount of items returned in a request.",
              "format": "int32",
              "default": 25,
              "example": 50
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "With this parameter you can set the offset at which the items will begin. This can be helpful for paginating the items if there are too many.",
            "schema": {
              "type": "integer",
              "description": "With this parameter you can set the offset at which the items will begin. This can be helpful for paginating the items if there are too many.",
              "format": "int32",
              "default": 0,
              "example": 0
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "With this parameter you can filter based on the current status of a job and get all results with that filter.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "in_queue",
                  "processing",
                  "hitl",
                  "done",
                  "error",
                  "closed",
                  "rejected"
                ]
              },
              "description": "With this parameter you can filter based on the current status of a job and get all results with that filter."
            },
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncJobListResponse"
                }
              }
            }
          },
          "400": {
            "description": "On input validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100002,
                  "errormessage": "unsupported Content-Type",
                  "requestid": "1235"
                }
              }
            }
          },
          "401": {
            "description": "On unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100003,
                  "errormessage": "API key invalid or no API key provided",
                  "requestid": "1235"
                }
              }
            }
          },
          "500": {
            "description": "On internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100001,
                  "errormessage": "Request to the Document Capture failed",
                  "requestid": "1235"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Generic Document Capturing API"
        ],
        "summary": "Capture generic document asynchronously",
        "description": "This endpoint allows the user to submit a document to be captured with the generic model to process them asynchronously. It will return a ID that is linked to a job. This ID is what we will use in other requests to identify your documents with. The webhooks are optional to use, so if you do not want to use them you do not have to include that portion of the request.",
        "operationId": "document-capturing-generic-async",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Document-Capturing-Generic-AsyncInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncJobIDResponse"
                }
              }
            }
          },
          "400": {
            "description": "On input validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100002,
                  "errormessage": "unsupported Content-Type",
                  "requestid": "1235"
                }
              }
            }
          },
          "401": {
            "description": "On unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100003,
                  "errormessage": "API key invalid or no API key provided",
                  "requestid": "1235"
                }
              }
            }
          },
          "500": {
            "description": "On internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100001,
                  "errormessage": "Request to the Document Capture failed",
                  "requestid": "1235"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/document_capturing/v1/generic/async/{job_id}": {
      "get": {
        "tags": [
          "Generic Document Capturing API"
        ],
        "summary": "Get status of the generic document capture async job",
        "description": "This endpoint gives back the current status of the generic document capture async job.",
        "operationId": "document-capturing-generic-async-job-status",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "description": "The Job ID that was given back on the initial request to the async capturing endpoint.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The Job ID that was given back on the initial request to the async capturing endpoint."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncJobStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "On input validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100002,
                  "errormessage": "unsupported Content-Type",
                  "requestid": "1235"
                }
              }
            }
          },
          "401": {
            "description": "On unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100003,
                  "errormessage": "API key invalid or no API key provided",
                  "requestid": "1235"
                }
              }
            }
          },
          "500": {
            "description": "On internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100001,
                  "errormessage": "Request to the Document Capture failed",
                  "requestid": "1235"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Generic Document Capturing API"
        ],
        "summary": "Remove or cancel the generic document capture async job",
        "description": "This endpoint deletes the generic document capture async job results and other related documents from our servers. It will also cancel the job if it still needs to be processed and is waiting in the queue",
        "operationId": "document-capturing-generic-async-job-delete",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "description": "The Job ID that was given back on the initial request to the async capturing endpoint.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The Job ID that was given back on the initial request to the async capturing endpoint."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSuccess"
                }
              }
            }
          },
          "400": {
            "description": "On input validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100002,
                  "errormessage": "unsupported Content-Type",
                  "requestid": "1235"
                }
              }
            }
          },
          "401": {
            "description": "On unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100003,
                  "errormessage": "API key invalid or no API key provided",
                  "requestid": "1235"
                }
              }
            }
          },
          "500": {
            "description": "On internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100001,
                  "errormessage": "Request to the Document Capture failed",
                  "requestid": "1235"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/document_capturing/v1/generic/async/{job_id}/logs": {
      "get": {
        "tags": [
          "Generic Document Capturing API"
        ],
        "summary": "Get logs of the generic document capture async job",
        "description": "This endpoint will return a list of logs we gathered from the generic document capture async job. It will mostly contain status changes and information on errors to debug on the client side or to be passed along to support",
        "operationId": "document-capturing-generic-async-job-logs",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "description": "The Job ID that was given back on the initial request to the async capturing endpoint.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The Job ID that was given back on the initial request to the async capturing endpoint."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "This parameter will set the maximum amount of items returned in a request.",
            "schema": {
              "type": "integer",
              "description": "This parameter will set the maximum amount of items returned in a request.",
              "format": "int32",
              "default": 25,
              "example": 50
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "With this parameter you can set the offset at which the items will begin. This can be helpful for paginating the items if there are too many.",
            "schema": {
              "type": "integer",
              "description": "With this parameter you can set the offset at which the items will begin. This can be helpful for paginating the items if there are too many.",
              "format": "int32",
              "default": 0,
              "example": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncJobLogResponse"
                }
              }
            }
          },
          "400": {
            "description": "On input validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100002,
                  "errormessage": "unsupported Content-Type",
                  "requestid": "1235"
                }
              }
            }
          },
          "401": {
            "description": "On unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100003,
                  "errormessage": "API key invalid or no API key provided",
                  "requestid": "1235"
                }
              }
            }
          },
          "500": {
            "description": "On internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100001,
                  "errormessage": "Request to the Document Capture failed",
                  "requestid": "1235"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/document_capturing/v1/generic/async/{job_id}/result": {
      "get": {
        "tags": [
          "Generic Document Capturing API"
        ],
        "summary": "Get results of the generic document capture async job",
        "description": "This endpoint returns the results of the generic document capture async job.",
        "operationId": "document-capturing-generic-async-job-result",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "description": "The Job ID that was given back on the initial request to the async capturing endpoint.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The Job ID that was given back on the initial request to the async capturing endpoint."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                }
              }
            }
          },
          "400": {
            "description": "On input validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100002,
                  "errormessage": "unsupported Content-Type",
                  "requestid": "1235"
                }
              }
            }
          },
          "401": {
            "description": "On unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100003,
                  "errormessage": "API key invalid or no API key provided",
                  "requestid": "1235"
                }
              }
            }
          },
          "500": {
            "description": "On internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100001,
                  "errormessage": "Request to the Document Capture failed",
                  "requestid": "1235"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/document_capturing/v1/generic/xlsx": {
      "post": {
        "tags": [
          "Generic Document Capturing API"
        ],
        "summary": "Capture generic document (XLSX output)",
        "description": "This endpoint allows the user to submit a document to be captured with the generic model. This endpoint turns a document into generic structured data. We extract key-value pairs and tables. The output is an XLSX file.",
        "operationId": "document-capturing-generic-xlsx",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Document-Capturing-Generic-XlsxInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Generic_captureXLSXResponse"
                }
              }
            }
          },
          "400": {
            "description": "On input validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100002,
                  "errormessage": "unsupported Content-Type",
                  "requestid": "1235"
                }
              }
            }
          },
          "401": {
            "description": "On unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100003,
                  "errormessage": "API key invalid or no API key provided",
                  "requestid": "1235"
                }
              }
            }
          },
          "500": {
            "description": "On internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100001,
                  "errormessage": "Request to the Document Capture failed",
                  "requestid": "1235"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/document_capturing/v1/prompt_builder/configurations": {
      "get": {
        "tags": [
          "Prompt Builder Document Capturing API"
        ],
        "summary": "List the available prompt builder configurations",
        "description": "List the available prompt builder configurations.",
        "operationId": "document-capturing-prompt-builder-configurations",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prompt_builder_captureConfigurationsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/document_capturing/v1/prompt_builder/configurations/{slug}": {
      "post": {
        "tags": [
          "Prompt Builder Document Capturing API"
        ],
        "summary": "Capture with a prompt builder configuration",
        "description": "Capture documents with the given slug on a prompt builder configuration.",
        "operationId": "document-capturing-prompt-builder-configuration-capture",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "The slug of the prompt builder configuration.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The slug of the prompt builder configuration."
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Document-Capturing-Prompt-Builder-Configuration-CaptureInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prompt_builderResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/document_capturing/v1/prompt_builder/configurations/{slug}/async": {
      "get": {
        "tags": [
          "Prompt Builder Document Capturing API"
        ],
        "summary": "Get a list of jobs from the prompt-builder-configuration document capturer",
        "description": "This endpoint returns a list of jobs. It returns when a job was created, what the current status is and the ID of said job. For the filtering on status the following values can be used (both on their own or in parameter array): in_queue, processing, hitl, done, error, closed and rejected.",
        "operationId": "document-capturing-prompt-builder-configuration-async-job-list",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "The slug of the prompt builder configuration.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The slug of the prompt builder configuration."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "This parameter will set the maximum amount of items returned in a request.",
            "schema": {
              "type": "integer",
              "description": "This parameter will set the maximum amount of items returned in a request.",
              "format": "int32",
              "default": 25,
              "example": 50
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "With this parameter you can set the offset at which the items will begin. This can be helpful for paginating the items if there are too many.",
            "schema": {
              "type": "integer",
              "description": "With this parameter you can set the offset at which the items will begin. This can be helpful for paginating the items if there are too many.",
              "format": "int32",
              "default": 0,
              "example": 0
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "With this parameter you can filter based on the current status of a job and get all results with that filter.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "in_queue",
                  "processing",
                  "hitl",
                  "done",
                  "error",
                  "closed",
                  "rejected"
                ]
              },
              "description": "With this parameter you can filter based on the current status of a job and get all results with that filter."
            },
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncJobListResponse"
                }
              }
            }
          },
          "400": {
            "description": "On input validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100002,
                  "errormessage": "unsupported Content-Type",
                  "requestid": "1235"
                }
              }
            }
          },
          "401": {
            "description": "On unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100003,
                  "errormessage": "API key invalid or no API key provided",
                  "requestid": "1235"
                }
              }
            }
          },
          "500": {
            "description": "On internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100001,
                  "errormessage": "Request to the Document Capture failed",
                  "requestid": "1235"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Prompt Builder Document Capturing API"
        ],
        "summary": "Capture prompt builder configuration document asynchronously",
        "description": "This endpoint allows the user to submit a document to be captured with the prompt builder configuration model to process them asynchronously. It will return a ID that is linked to a job. This ID is what we will use in other requests to identify your documents with. The webhooks are optional to use, so if you do not want to use them you do not have to include that portion of the request.",
        "operationId": "document-capturing-prompt-builder-configuration-async",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "The slug of the prompt builder configuration.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The slug of the prompt builder configuration."
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Document-Capturing-Prompt-Builder-Configuration-AsyncInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncJobIDResponse"
                }
              }
            }
          },
          "400": {
            "description": "On input validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100002,
                  "errormessage": "unsupported Content-Type",
                  "requestid": "1235"
                }
              }
            }
          },
          "401": {
            "description": "On unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100003,
                  "errormessage": "API key invalid or no API key provided",
                  "requestid": "1235"
                }
              }
            }
          },
          "500": {
            "description": "On internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100001,
                  "errormessage": "Request to the Document Capture failed",
                  "requestid": "1235"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/document_capturing/v1/prompt_builder/configurations/{slug}/async/{job_id}": {
      "get": {
        "tags": [
          "Prompt Builder Document Capturing API"
        ],
        "summary": "Get status of the prompt builder configuration document capture async job",
        "description": "This endpoint gives back the current status of the prompt builder configuration document capture async job.",
        "operationId": "document-capturing-prompt-builder-configuration-async-job-status",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "description": "The Job ID that was given back on the initial request to the async capturing endpoint.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The Job ID that was given back on the initial request to the async capturing endpoint."
            }
          },
          {
            "name": "slug",
            "in": "path",
            "description": "The slug of the prompt builder configuration.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The slug of the prompt builder configuration."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncJobStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "On input validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100002,
                  "errormessage": "unsupported Content-Type",
                  "requestid": "1235"
                }
              }
            }
          },
          "401": {
            "description": "On unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100003,
                  "errormessage": "API key invalid or no API key provided",
                  "requestid": "1235"
                }
              }
            }
          },
          "500": {
            "description": "On internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100001,
                  "errormessage": "Request to the Document Capture failed",
                  "requestid": "1235"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Prompt Builder Document Capturing API"
        ],
        "summary": "Remove or cancel the prompt builder configuration document capture async job",
        "description": "This endpoint deletes the prompt builder configuration document capture async job results and other related documents from our servers. It will also cancel the job if it still needs to be processed and is waiting in the queue",
        "operationId": "document-capturing-prompt-builder-configuration-async-job-delete",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "description": "The Job ID that was given back on the initial request to the async capturing endpoint.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The Job ID that was given back on the initial request to the async capturing endpoint."
            }
          },
          {
            "name": "slug",
            "in": "path",
            "description": "The slug of the prompt builder configuration.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The slug of the prompt builder configuration."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSuccess"
                }
              }
            }
          },
          "400": {
            "description": "On input validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100002,
                  "errormessage": "unsupported Content-Type",
                  "requestid": "1235"
                }
              }
            }
          },
          "401": {
            "description": "On unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100003,
                  "errormessage": "API key invalid or no API key provided",
                  "requestid": "1235"
                }
              }
            }
          },
          "500": {
            "description": "On internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100001,
                  "errormessage": "Request to the Document Capture failed",
                  "requestid": "1235"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/document_capturing/v1/prompt_builder/configurations/{slug}/async/{job_id}/logs": {
      "get": {
        "tags": [
          "Prompt Builder Document Capturing API"
        ],
        "summary": "Get logs of the prompt builder configuration document capture async job",
        "description": "This endpoint will return a list of logs we gathered from the prompt builder configuration document capture async job. It will mostly contain status changes and information on errors to debug on the client side or to be passed along to support",
        "operationId": "document-capturing-prompt-builder-configuration-async-job-logs",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "description": "The Job ID that was given back on the initial request to the async capturing endpoint.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The Job ID that was given back on the initial request to the async capturing endpoint."
            }
          },
          {
            "name": "slug",
            "in": "path",
            "description": "The slug of the prompt builder configuration.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The slug of the prompt builder configuration."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "This parameter will set the maximum amount of items returned in a request.",
            "schema": {
              "type": "integer",
              "description": "This parameter will set the maximum amount of items returned in a request.",
              "format": "int32",
              "default": 25,
              "example": 50
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "With this parameter you can set the offset at which the items will begin. This can be helpful for paginating the items if there are too many.",
            "schema": {
              "type": "integer",
              "description": "With this parameter you can set the offset at which the items will begin. This can be helpful for paginating the items if there are too many.",
              "format": "int32",
              "default": 0,
              "example": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncJobLogResponse"
                }
              }
            }
          },
          "400": {
            "description": "On input validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100002,
                  "errormessage": "unsupported Content-Type",
                  "requestid": "1235"
                }
              }
            }
          },
          "401": {
            "description": "On unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100003,
                  "errormessage": "API key invalid or no API key provided",
                  "requestid": "1235"
                }
              }
            }
          },
          "500": {
            "description": "On internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100001,
                  "errormessage": "Request to the Document Capture failed",
                  "requestid": "1235"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/document_capturing/v1/prompt_builder/configurations/{slug}/async/{job_id}/result": {
      "get": {
        "tags": [
          "Prompt Builder Document Capturing API"
        ],
        "summary": "Get results of the prompt builder configuration document capture async job",
        "description": "This endpoint returns the results of the prompt builder configuration document capture async job.",
        "operationId": "document-capturing-prompt-builder-configuration-async-job-result",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "description": "The Job ID that was given back on the initial request to the async capturing endpoint.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The Job ID that was given back on the initial request to the async capturing endpoint."
            }
          },
          {
            "name": "slug",
            "in": "path",
            "description": "The slug of the prompt builder configuration.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The slug of the prompt builder configuration."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prompt_builderResponse"
                }
              }
            }
          },
          "400": {
            "description": "On input validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100002,
                  "errormessage": "unsupported Content-Type",
                  "requestid": "1235"
                }
              }
            }
          },
          "401": {
            "description": "On unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100003,
                  "errormessage": "API key invalid or no API key provided",
                  "requestid": "1235"
                }
              }
            }
          },
          "500": {
            "description": "On internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSerializableError"
                },
                "example": {
                  "result": "error",
                  "errorcode": 100001,
                  "errormessage": "Request to the Document Capture failed",
                  "requestid": "1235"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/document_capturing/v1/prompt_builder/configurations/{slug}/schema": {
      "get": {
        "tags": [
          "Prompt Builder Document Capturing API"
        ],
        "summary": "Get the JSON schema of a prompt builder configuration",
        "description": "Get the JSON schema of given slug on a prompt builder configuration.",
        "operationId": "document-capturing-prompt-builder-configuration-schema",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "The slug of the prompt builder configuration.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The slug of the prompt builder configuration."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prompt_builder_captureSchemaResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/document_toolkit/v1/info": {
      "post": {
        "tags": [
          "Document Toolkit API"
        ],
        "summary": "Info",
        "description": "Retrieve information about a document. Currently, this endpoint only supports PDF and TIFF documents.",
        "operationId": "document-toolkit-info",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Document-Toolkit-InfoInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document_toolkitInfoResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/document_toolkit/v1/merge": {
      "post": {
        "tags": [
          "Document Toolkit API"
        ],
        "summary": "Merge",
        "description": "Merge multiple documents into a single document. Currently, this endpoint only supports PDF documents.",
        "operationId": "document-toolkit-merge",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Document-Toolkit-MergeInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document_toolkitMergeResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/document_toolkit/v1/render": {
      "post": {
        "tags": [
          "Document Toolkit API"
        ],
        "summary": "Render",
        "description": "Render a document into one or multiple images. Currently, this endpoint only supports PDF documents.",
        "operationId": "document-toolkit-render",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Document-Toolkit-RenderInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document_toolkitRenderResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/document_toolkit/v1/split": {
      "post": {
        "tags": [
          "Document Toolkit API"
        ],
        "summary": "Split",
        "description": "Split a document into multiple files or extract specific pages from a document. Currently, this endpoint only supports PDF documents.",
        "operationId": "document-toolkit-split",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Document-Toolkit-SplitInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document_toolkitSplitResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/storage/v1/files": {
      "post": {
        "tags": [
          "Storage API"
        ],
        "summary": "Create",
        "description": "Create a new file.",
        "operationId": "storage-file-create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Storage-File-CreateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageCreateResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/storage/v1/files/{file_id}": {
      "get": {
        "tags": [
          "Storage API"
        ],
        "summary": "Get",
        "description": "Get a file. The file is returned as raw binary",
        "operationId": "storage-file-get",
        "parameters": [
          {
            "name": "file_id",
            "in": "path",
            "description": "The ID of the requested file.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the requested file."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AsyncJobIDResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AsyncReturnJobID"
          },
          "request_id": {
            "type": "string",
            "description": "A request ID for support and debugging purposes."
          },
          "result": {
            "type": "string",
            "description": "Whether the call was successful.",
            "enum": [
              "success",
              "error"
            ]
          }
        },
        "required": [
          "data",
          "data",
          "request_id",
          "result"
        ]
      },
      "AsyncJobListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SharedJobs"
          },
          "request_id": {
            "type": "string",
            "description": "A request ID for support and debugging purposes."
          },
          "result": {
            "type": "string",
            "description": "Whether the call was successful.",
            "enum": [
              "success",
              "error"
            ]
          }
        },
        "required": [
          "data",
          "data",
          "request_id",
          "result"
        ]
      },
      "AsyncJobLogResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SharedLogs"
          },
          "request_id": {
            "type": "string",
            "description": "A request ID for support and debugging purposes."
          },
          "result": {
            "type": "string",
            "description": "Whether the call was successful.",
            "enum": [
              "success",
              "error"
            ]
          }
        },
        "required": [
          "data",
          "data",
          "request_id",
          "result"
        ]
      },
      "AsyncJobStatusResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SharedReturnJobStatus"
          },
          "request_id": {
            "type": "string",
            "description": "A request ID for support and debugging purposes."
          },
          "result": {
            "type": "string",
            "description": "Whether the call was successful.",
            "enum": [
              "success",
              "error"
            ]
          }
        },
        "required": [
          "data",
          "data",
          "request_id",
          "result"
        ]
      },
      "AsyncReturnJobID": {
        "type": "object",
        "properties": {
          "job_id": {
            "type": "string",
            "description": "The ID that the created job can be tracked with."
          }
        },
        "description": "The JobID created for the submited documents.",
        "required": [
          "job_id"
        ]
      },
      "AuthAuthInfoCredential": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "AuthAuthInfoOrganization": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "AuthAuthInfoProject": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "AuthAuthInfoResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AuthAuthInfoResponseData"
          },
          "request_id": {
            "type": "string",
            "description": "A request ID for support and debugging purposes."
          },
          "result": {
            "type": "string",
            "description": "Whether the call was successful.",
            "enum": [
              "success",
              "error"
            ]
          }
        },
        "required": [
          "data",
          "data",
          "request_id",
          "result"
        ]
      },
      "AuthAuthInfoResponseData": {
        "type": "object",
        "properties": {
          "credential": {
            "$ref": "#/components/schemas/AuthAuthInfoCredential"
          },
          "enabled_services": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuthEnabledService"
            }
          },
          "organization": {
            "$ref": "#/components/schemas/AuthAuthInfoOrganization"
          },
          "project": {
            "$ref": "#/components/schemas/AuthAuthInfoProject"
          },
          "service_user": {
            "$ref": "#/components/schemas/AuthAuthInfoServiceUser"
          }
        },
        "description": "Information about the currently used key.",
        "required": [
          "credential",
          "enabled_services",
          "organization",
          "project",
          "service_user"
        ]
      },
      "AuthAuthInfoServiceUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "AuthEnabledService": {
        "type": "object",
        "properties": {
          "service": {
            "type": "string"
          }
        },
        "required": [
          "service"
        ]
      },
      "Document-Capturing-Financial-AsyncInput": {
        "type": "object",
        "properties": {
          "components": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_inputComponentConfigurationInput"
              }
            ],
            "nullable": true
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Generic_document_inputDocument"
            },
            "description": "A list of documents to process."
          },
          "hitl": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HitlHitlConfig"
              }
            ],
            "nullable": true
          },
          "preset": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Generic_document_inputInputPreset"
              }
            ],
            "nullable": true
          },
          "webhook": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Webhooks_configWebhookConfig"
              }
            ],
            "nullable": true
          }
        },
        "required": [
          "components",
          "documents",
          "hitl",
          "preset",
          "webhook"
        ]
      },
      "Document-Capturing-FinancialInput": {
        "type": "object",
        "properties": {
          "components": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_inputComponentConfigurationInput"
              }
            ],
            "nullable": true
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Generic_document_inputDocument"
            },
            "description": "A list of documents to process."
          },
          "preset": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Generic_document_inputInputPreset"
              }
            ],
            "nullable": true
          }
        },
        "required": [
          "components",
          "documents",
          "preset"
        ]
      },
      "Document-Capturing-Generic-AsyncInput": {
        "type": "object",
        "properties": {
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Generic_document_inputDocument"
            },
            "description": "A list of documents to process."
          },
          "webhook": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Webhooks_configWebhookConfig"
              }
            ],
            "nullable": true
          }
        },
        "required": [
          "documents",
          "webhook"
        ]
      },
      "Document-Capturing-Generic-XlsxInput": {
        "type": "object",
        "properties": {
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Generic_document_inputDocument"
            },
            "description": "A list of documents to process."
          },
          "output_target": {
            "type": "string",
            "description": "How to output the result file.",
            "enum": [
              "Base64",
              "StorageAPI"
            ]
          }
        },
        "required": [
          "documents",
          "output_target"
        ]
      },
      "Document-Capturing-GenericInput": {
        "type": "object",
        "properties": {
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Generic_document_inputDocument"
            },
            "description": "A list of documents to process."
          }
        },
        "required": [
          "documents"
        ]
      },
      "Document-Capturing-Prompt-Builder-Configuration-AsyncInput": {
        "type": "object",
        "properties": {
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Generic_document_inputDocument"
            },
            "description": "A list of documents to capture."
          },
          "hitl": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HitlHitlConfig"
              }
            ],
            "nullable": true
          },
          "webhook": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Webhooks_configWebhookConfig"
              }
            ],
            "nullable": true
          }
        },
        "required": [
          "documents",
          "hitl",
          "webhook"
        ]
      },
      "Document-Capturing-Prompt-Builder-Configuration-CaptureInput": {
        "type": "object",
        "properties": {
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Generic_document_inputDocument"
            },
            "description": "A list of documents to capture."
          }
        },
        "required": [
          "documents"
        ]
      },
      "Document-Toolkit-InfoInput": {
        "type": "object",
        "properties": {
          "document": {
            "$ref": "#/components/schemas/Document_toolkitInfoInputDocument"
          }
        },
        "required": [
          "document"
        ]
      },
      "Document-Toolkit-MergeInput": {
        "type": "object",
        "properties": {
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document_toolkitMergeInputDocument"
            },
            "description": "The documents to merge."
          },
          "output_target": {
            "type": "string",
            "description": "How to output the result file.",
            "enum": [
              "Base64",
              "StorageAPI"
            ]
          }
        },
        "required": [
          "documents",
          "output_target"
        ]
      },
      "Document-Toolkit-RenderInput": {
        "type": "object",
        "properties": {
          "document": {
            "$ref": "#/components/schemas/Document_toolkitRenderInputDocument"
          },
          "output_target": {
            "type": "string",
            "description": "Where to output the result files.",
            "enum": [
              "Base64",
              "StorageAPI"
            ]
          },
          "renders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document_toolkitRenderInputDocumentRenders"
            },
            "description": "The render configurations."
          }
        },
        "required": [
          "document",
          "output_target",
          "renders"
        ]
      },
      "Document-Toolkit-SplitInput": {
        "type": "object",
        "properties": {
          "document": {
            "$ref": "#/components/schemas/Document_toolkitSplitInputDocument"
          },
          "output_target": {
            "type": "string",
            "description": "Where to output the result file.",
            "enum": [
              "Base64",
              "StorageAPI"
            ]
          },
          "page_ranges": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The page ranges to split, giving multiple ranges will result in multiple files. Ranges are like '1-3,5', which will result in a PDF file with pages 1, 2, 3 and 5. You can use the keywords first and last. You can prepend a page number to start counting from the end. Examples: use '2-last' for the second page until the last page, use '3-r1' for page 3 until the second-last page. Invalid page numbers will be skipped. If not given, every page will become a separate PDF."
          }
        },
        "required": [
          "document",
          "output_target",
          "page_ranges"
        ]
      },
      "Document_capturingComponent": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "options": {
            "type": "object",
            "additionalProperties": {}
          }
        },
        "required": [
          "name",
          "options"
        ]
      },
      "Document_capturingListEnabledModelsModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "service": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "service"
        ]
      },
      "Document_capturingListEnabledModelsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document_capturingListEnabledModelsModel"
            },
            "description": "A list of models that are enabled for document capturing."
          },
          "request_id": {
            "type": "string",
            "description": "A request ID for support and debugging purposes."
          },
          "result": {
            "type": "string",
            "description": "Whether the call was successful.",
            "enum": [
              "success",
              "error"
            ]
          }
        },
        "required": [
          "data",
          "data",
          "request_id",
          "result"
        ]
      },
      "Document_capturingListPresetsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document_capturingListPresetsResponsePreset"
            },
            "description": "A list of presets and the component configuration."
          },
          "request_id": {
            "type": "string",
            "description": "A request ID for support and debugging purposes."
          },
          "result": {
            "type": "string",
            "description": "Whether the call was successful.",
            "enum": [
              "success",
              "error"
            ]
          }
        },
        "required": [
          "data",
          "data",
          "request_id",
          "result"
        ]
      },
      "Document_capturingListPresetsResponsePreset": {
        "type": "object",
        "properties": {
          "components": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document_capturingComponent"
            }
          },
          "name": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          }
        },
        "required": [
          "components",
          "name",
          "slug"
        ]
      },
      "Document_capturingSchemaOutput": {
        "type": "object",
        "properties": {
          "schema": {
            "type": "object",
            "additionalProperties": {}
          }
        },
        "description": "The schema of the model.",
        "required": [
          "schema"
        ]
      },
      "Document_capturingSchemaResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Document_capturingSchemaOutput"
          },
          "request_id": {
            "type": "string",
            "description": "A request ID for support and debugging purposes."
          },
          "result": {
            "type": "string",
            "description": "Whether the call was successful.",
            "enum": [
              "success",
              "error"
            ]
          }
        },
        "required": [
          "data",
          "data",
          "request_id",
          "result"
        ]
      },
      "Document_toolkitInfoInputDocument": {
        "type": "object",
        "properties": {
          "content_type": {
            "type": "string",
            "description": "The content type of the file, if not given we will try to detect this.",
            "nullable": true
          },
          "data": {
            "type": "string",
            "description": "The raw file data of the document in base64.",
            "nullable": true
          },
          "file_id": {
            "type": "string",
            "description": "The file ID in the Storage API of the document to process.",
            "nullable": true
          },
          "filename": {
            "type": "string",
            "description": "The name of the file.",
            "nullable": true
          },
          "password": {
            "type": "string",
            "description": "If the file is password protected, enter the password here. Only affects files that are password protected.",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "The URL to download as document. The request should be completed within 30 seconds.",
            "nullable": true
          }
        },
        "description": "The document to get info on.",
        "required": [
          "content_type",
          "data",
          "file_id",
          "filename",
          "password",
          "url"
        ]
      },
      "Document_toolkitInfoOutput": {
        "type": "object",
        "properties": {
          "content_type": {
            "type": "string"
          },
          "file_version": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "metadata": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document_toolkitInfoOutputMetadata"
            }
          },
          "pages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document_toolkitInfoOutputPage"
            }
          },
          "permissions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Document_toolkitInfoOutputPermissions"
              }
            ],
            "nullable": true
          },
          "security_handler_revision": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "description": "The shared object of the Document Toolkit API info operation.",
        "required": [
          "content_type",
          "file_version",
          "metadata",
          "pages",
          "permissions",
          "security_handler_revision"
        ]
      },
      "Document_toolkitInfoOutputMetadata": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "key",
          "value"
        ]
      },
      "Document_toolkitInfoOutputPage": {
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "$ref": "#/components/schemas/Document_toolkitInfoOutputPageSize"
          }
        },
        "required": [
          "page_number",
          "size"
        ]
      },
      "Document_toolkitInfoOutputPageSize": {
        "type": "object",
        "properties": {
          "height": {
            "type": "number",
            "format": "double"
          },
          "width": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "height",
          "width"
        ]
      },
      "Document_toolkitInfoOutputPermissions": {
        "type": "object",
        "properties": {
          "add_or_modify_text_annotations": {
            "type": "boolean"
          },
          "assemble_document": {
            "type": "boolean"
          },
          "copy_or_extract_text": {
            "type": "boolean"
          },
          "create_or_modify_interactive_form_fields": {
            "type": "boolean"
          },
          "extract_text_and_graphics": {
            "type": "boolean"
          },
          "fill_in_existing_interactive_form_fields": {
            "type": "boolean"
          },
          "fill_in_interactive_form_fields": {
            "type": "boolean"
          },
          "flags": {
            "type": "integer",
            "format": "int32"
          },
          "modify_contents": {
            "type": "boolean"
          },
          "print_document": {
            "type": "boolean"
          },
          "print_document_as_faithful_digital_copy": {
            "type": "boolean"
          }
        },
        "required": [
          "add_or_modify_text_annotations",
          "assemble_document",
          "copy_or_extract_text",
          "create_or_modify_interactive_form_fields",
          "extract_text_and_graphics",
          "fill_in_existing_interactive_form_fields",
          "fill_in_interactive_form_fields",
          "flags",
          "modify_contents",
          "print_document",
          "print_document_as_faithful_digital_copy"
        ]
      },
      "Document_toolkitInfoResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Document_toolkitInfoOutput"
          },
          "request_id": {
            "type": "string",
            "description": "A request ID for support and debugging purposes."
          },
          "result": {
            "type": "string",
            "description": "Whether the call was successful.",
            "enum": [
              "success",
              "error"
            ]
          }
        },
        "required": [
          "data",
          "data",
          "request_id",
          "result"
        ]
      },
      "Document_toolkitMergeData": {
        "type": "object",
        "properties": {
          "document": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Document_toolkitMergedDocument"
              }
            ],
            "nullable": true
          }
        },
        "description": "The shared object of the Document Toolkit API merge operation.",
        "required": [
          "document"
        ]
      },
      "Document_toolkitMergeInputDocument": {
        "type": "object",
        "properties": {
          "content_type": {
            "type": "string",
            "description": "The content type of the file, if not given we will try to detect this.",
            "nullable": true
          },
          "data": {
            "type": "string",
            "description": "The raw file data of the document in base64.",
            "nullable": true
          },
          "file_id": {
            "type": "string",
            "description": "The file ID in the Storage API of the document to process.",
            "nullable": true
          },
          "filename": {
            "type": "string",
            "description": "The name of the file.",
            "nullable": true
          },
          "page_ranges": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The page ranges of this document to use in the merge. If none given, all pages will be merged. Ranges are like '1-3,5', which will result in a PDF file with pages 1, 2, 3 and 5. You can use the keywords first and last. You can prepend a page number to start counting from the end. Examples: use '2-last' for the second page until the last page, use '3-r1' for page 3 until the second-last page. Invalid page numbers will be skipped."
          },
          "password": {
            "type": "string",
            "description": "If the file is password protected, enter the password here. Only affects files that are password protected.",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "The URL to download as document. The request should be completed within 30 seconds.",
            "nullable": true
          }
        },
        "required": [
          "content_type",
          "data",
          "file_id",
          "filename",
          "page_ranges",
          "password",
          "url"
        ]
      },
      "Document_toolkitMergeResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Document_toolkitMergeData"
          },
          "request_id": {
            "type": "string",
            "description": "A request ID for support and debugging purposes."
          },
          "result": {
            "type": "string",
            "description": "Whether the call was successful.",
            "enum": [
              "success",
              "error"
            ]
          }
        },
        "required": [
          "data",
          "data",
          "request_id",
          "result"
        ]
      },
      "Document_toolkitMergedDocument": {
        "type": "object",
        "properties": {
          "output": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Document_toolkitOutput"
              }
            ],
            "nullable": true
          }
        },
        "required": [
          "output"
        ]
      },
      "Document_toolkitOutput": {
        "type": "object",
        "properties": {
          "content_type": {
            "type": "string",
            "description": "The content type of the output."
          },
          "data": {
            "type": "string",
            "description": "The resulting data in base64.",
            "format": "byte",
            "nullable": true
          },
          "file_id": {
            "type": "string",
            "description": "The resulting file ID in the storage API.",
            "nullable": true
          }
        },
        "description": "The output data of the render operation.",
        "required": [
          "content_type",
          "data",
          "file_id"
        ]
      },
      "Document_toolkitRenderInputDocument": {
        "type": "object",
        "properties": {
          "content_type": {
            "type": "string",
            "description": "The content type of the file, if not given we will try to detect this.",
            "nullable": true
          },
          "data": {
            "type": "string",
            "description": "The raw file data of the document in base64.",
            "nullable": true
          },
          "file_id": {
            "type": "string",
            "description": "The file ID in the Storage API of the document to process.",
            "nullable": true
          },
          "filename": {
            "type": "string",
            "description": "The name of the file.",
            "nullable": true
          },
          "password": {
            "type": "string",
            "description": "If the file is password protected, enter the password here. Only affects files that are password protected.",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "The URL to download as document. The request should be completed within 30 seconds.",
            "nullable": true
          }
        },
        "description": "The document to render.",
        "required": [
          "content_type",
          "data",
          "file_id",
          "filename",
          "password",
          "url"
        ]
      },
      "Document_toolkitRenderInputDocumentRenders": {
        "type": "object",
        "properties": {
          "height": {
            "type": "integer",
            "description": "The maximum height of the resulting image. Leave empty to automatically calculate based on the width. Height might become smaller to keep the aspect ratio of the page.",
            "format": "int32"
          },
          "page_ranges": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The page ranges to render, giving multiple ranges will result in multiple files. Ranges are like '1-3,5', which will result in a PDF file with pages 1, 2, 3 and 5. You can use the keywords first and last. You can prepend a page number to start counting from the end. Examples: use '2-last' for the second page until the last page, use '3-r1' for page 3 until the second-last page. Invalid page numbers will be skipped. If not given, every page will be rendered."
          },
          "width": {
            "type": "integer",
            "description": "The maximum width of the resulting image. Leave empty to automatically calculate based on the width. Width might become smaller to keep the aspect ratio of the page.",
            "format": "int32"
          }
        },
        "required": [
          "height",
          "page_ranges",
          "width"
        ]
      },
      "Document_toolkitRenderOutput": {
        "type": "object",
        "properties": {
          "renders": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Document_toolkitRenderOutputRender"
                }
              ],
              "nullable": true
            }
          }
        },
        "description": "The shared object of the Document Toolkit API render operation.",
        "required": [
          "renders"
        ]
      },
      "Document_toolkitRenderOutputRender": {
        "type": "object",
        "properties": {
          "output": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Document_toolkitOutput"
              }
            ],
            "nullable": true
          },
          "page_range": {
            "type": "string",
            "description": "The page range that was used to render this image."
          },
          "pages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document_toolkitRenderOutputRenderPage"
            }
          }
        },
        "required": [
          "output",
          "page_range",
          "pages"
        ]
      },
      "Document_toolkitRenderOutputRenderPage": {
        "type": "object",
        "properties": {
          "height": {
            "type": "integer",
            "format": "int32"
          },
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "point_to_pixel_ratio": {
            "type": "number",
            "format": "double"
          },
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "x": {
            "type": "integer",
            "format": "int32"
          },
          "y": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "height",
          "page_number",
          "point_to_pixel_ratio",
          "width",
          "x",
          "y"
        ]
      },
      "Document_toolkitRenderResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Document_toolkitRenderOutput"
          },
          "request_id": {
            "type": "string",
            "description": "A request ID for support and debugging purposes."
          },
          "result": {
            "type": "string",
            "description": "Whether the call was successful.",
            "enum": [
              "success",
              "error"
            ]
          }
        },
        "required": [
          "data",
          "data",
          "request_id",
          "result"
        ]
      },
      "Document_toolkitSplitData": {
        "type": "object",
        "properties": {
          "documents": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Document_toolkitSplitDocument"
                }
              ],
              "nullable": true
            },
            "description": "The documents that were a result of the split operation."
          }
        },
        "description": "The shared object of the Document Toolkit API split operation.",
        "required": [
          "documents"
        ]
      },
      "Document_toolkitSplitDocument": {
        "type": "object",
        "properties": {
          "output": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Document_toolkitOutput"
              }
            ],
            "nullable": true
          },
          "page_range": {
            "type": "string",
            "description": "The page range that was used to make this document."
          }
        },
        "required": [
          "output",
          "page_range"
        ]
      },
      "Document_toolkitSplitInputDocument": {
        "type": "object",
        "properties": {
          "content_type": {
            "type": "string",
            "description": "The content type of the file, if not given we will try to detect this.",
            "nullable": true
          },
          "data": {
            "type": "string",
            "description": "The raw file data of the document in base64.",
            "nullable": true
          },
          "file_id": {
            "type": "string",
            "description": "The file ID in the Storage API of the document to process.",
            "nullable": true
          },
          "filename": {
            "type": "string",
            "description": "The name of the file.",
            "nullable": true
          },
          "password": {
            "type": "string",
            "description": "If the file is password protected, enter the password here. Only affects files that are password protected.",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "The URL to download as document. The request should be completed within 30 seconds.",
            "nullable": true
          }
        },
        "description": "The document to split.",
        "required": [
          "content_type",
          "data",
          "file_id",
          "filename",
          "password",
          "url"
        ]
      },
      "Document_toolkitSplitResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Document_toolkitSplitData"
          },
          "request_id": {
            "type": "string",
            "description": "A request ID for support and debugging purposes."
          },
          "result": {
            "type": "string",
            "description": "Whether the call was successful.",
            "enum": [
              "success",
              "error"
            ]
          }
        },
        "required": [
          "data",
          "data",
          "request_id",
          "result"
        ]
      },
      "Financial_componentsAssignment": {
        "type": "object",
        "properties": {
          "fallback_id": {
            "type": "string"
          },
          "force_id": {
            "type": "string"
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "fallback_id",
          "force_id",
          "groups"
        ]
      },
      "Financial_componentsAssignments": {
        "type": "object",
        "properties": {
          "customer": {
            "$ref": "#/components/schemas/Financial_componentsAssignment"
          },
          "merchant": {
            "$ref": "#/components/schemas/Financial_componentsAssignment"
          }
        },
        "required": [
          "customer",
          "merchant"
        ]
      },
      "Financial_componentsKeywordMatchingInput": {
        "type": "object",
        "properties": {
          "rules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_componentsRules"
            },
            "description": "The rules to match keywords to, this can either be a regular expression or a list of keywords."
          }
        },
        "description": "The configuration for the keyword_matching component of this request.",
        "required": [
          "rules"
        ]
      },
      "Financial_componentsRelation": {
        "type": "object",
        "properties": {
          "bank_account_number": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "coc_number": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "street_name": {
            "type": "string",
            "nullable": true
          },
          "street_number": {
            "type": "string",
            "nullable": true
          },
          "vat_number": {
            "type": "string",
            "nullable": true
          },
          "website": {
            "type": "string",
            "nullable": true
          },
          "zipcode": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "groups",
          "id"
        ]
      },
      "Financial_componentsRelationMatchingInput": {
        "type": "object",
        "properties": {
          "assignments": {
            "$ref": "#/components/schemas/Financial_componentsAssignments"
          },
          "relations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_componentsRelation"
            },
            "description": "The relations to match."
          }
        },
        "description": "The configuration for the relation_matching component of this request.",
        "required": [
          "assignments",
          "relations"
        ]
      },
      "Financial_componentsRules": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "id of the keyword-matching rule"
          },
          "keywords": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "the list of keywords to match",
            "nullable": true
          },
          "regex": {
            "type": "string",
            "description": "the regular expression to use for matching the keywords",
            "nullable": true
          }
        },
        "required": [
          "id"
        ]
      },
      "Financial_inputComponentConfigurationInput": {
        "type": "object",
        "properties": {
          "keyword_matching": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_componentsKeywordMatchingInput"
              }
            ],
            "nullable": true
          },
          "relation_matching": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_componentsRelationMatchingInput"
              }
            ],
            "nullable": true
          }
        },
        "description": "The configuration of components to use for this request. This will overwrite any component configuration given by the preset that was used for the request.",
        "required": [
          "keyword_matching",
          "relation_matching"
        ]
      },
      "Financial_outputAddressComponent": {
        "type": "object",
        "properties": {
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputAddressWithContext"
            }
          },
          "candidates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputAddressValuesWithContext"
            }
          }
        },
        "required": [
          "addresses",
          "candidates"
        ]
      },
      "Financial_outputAddressValuesWithContext": {
        "type": "object",
        "properties": {
          "city": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputNormalizedValueStr"
              }
            ],
            "nullable": true
          },
          "context": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputNormalizedValueStr"
              }
            ],
            "nullable": true
          },
          "country_code": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputNormalizedValueStr"
              }
            ],
            "nullable": true
          },
          "house_number": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputNormalizedValueStr"
              }
            ],
            "nullable": true
          },
          "municipality": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputNormalizedValueStr"
              }
            ],
            "nullable": true
          },
          "post_box": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputNormalizedValueStr"
              }
            ],
            "nullable": true
          },
          "postal_code": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputNormalizedValueStr"
              }
            ],
            "nullable": true
          },
          "province": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputNormalizedValueStr"
              }
            ],
            "nullable": true
          },
          "raw_address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputNormalizedValueStr"
              }
            ],
            "nullable": true
          },
          "state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputNormalizedValueStr"
              }
            ],
            "nullable": true
          },
          "street_name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputNormalizedValueStr"
              }
            ],
            "nullable": true
          }
        },
        "required": [
          "city",
          "context",
          "country",
          "country_code",
          "house_number",
          "municipality",
          "post_box",
          "postal_code",
          "province",
          "raw_address",
          "state",
          "street_name"
        ]
      },
      "Financial_outputAddressWithContext": {
        "type": "object",
        "properties": {
          "city": {
            "type": "string",
            "nullable": true
          },
          "context": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "country_code": {
            "type": "string",
            "nullable": true
          },
          "house_number": {
            "type": "string",
            "nullable": true
          },
          "municipality": {
            "type": "string",
            "nullable": true
          },
          "post_box": {
            "type": "string",
            "nullable": true
          },
          "postal_code": {
            "type": "string",
            "nullable": true
          },
          "province": {
            "type": "string",
            "nullable": true
          },
          "raw_address": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "street_name": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "city",
          "context",
          "country",
          "country_code",
          "house_number",
          "municipality",
          "post_box",
          "postal_code",
          "province",
          "raw_address",
          "state",
          "street_name"
        ]
      },
      "Financial_outputAmountDetailsCandidates": {
        "type": "object",
        "properties": {
          "amount_change": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputNormalizedValueFloat"
            }
          },
          "amount_shipping": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputNormalizedValueFloat"
            }
          },
          "amount_tip": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputNormalizedValueFloat"
            }
          },
          "discounts": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Financial_outputDiscountValue"
              }
            }
          },
          "payments": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Financial_outputPaymentCandidate"
              }
            }
          }
        },
        "required": [
          "amount_change",
          "amount_shipping",
          "amount_tip",
          "discounts",
          "payments"
        ]
      },
      "Financial_outputAmountDetailsComponent": {
        "type": "object",
        "properties": {
          "amount_change": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "amount_shipping": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "amount_tip": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "candidates": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputAmountDetailsCandidates"
              }
            ],
            "nullable": true
          },
          "discounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputDiscount"
            }
          },
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputPayment"
            }
          }
        },
        "required": [
          "amount_change",
          "amount_shipping",
          "amount_tip",
          "candidates",
          "discounts",
          "payments"
        ]
      },
      "Financial_outputBankDetails": {
        "type": "object",
        "properties": {
          "account_number": {
            "type": "string",
            "nullable": true
          },
          "account_number_bic": {
            "type": "string",
            "nullable": true
          },
          "confidence": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "coordinates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputNormalizedCoordinates"
            }
          },
          "country_code": {
            "type": "string",
            "nullable": true
          },
          "domestic_account_number": {
            "type": "string",
            "nullable": true
          },
          "domestic_bank_code": {
            "type": "string",
            "nullable": true
          },
          "domestic_branch_code": {
            "type": "string",
            "nullable": true
          },
          "generated": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "verification": {
            "$ref": "#/components/schemas/Financial_outputVerification"
          }
        },
        "required": [
          "account_number",
          "account_number_bic",
          "confidence",
          "coordinates",
          "country_code",
          "domestic_account_number",
          "domestic_bank_code",
          "domestic_branch_code",
          "generated",
          "verification"
        ]
      },
      "Financial_outputBarcode": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "value"
        ]
      },
      "Financial_outputBarcodeComponent": {
        "type": "object",
        "properties": {
          "barcodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputBarcode"
            }
          },
          "candidates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputBarcodeValue"
            }
          }
        },
        "required": [
          "barcodes",
          "candidates"
        ]
      },
      "Financial_outputBarcodeValue": {
        "type": "object",
        "properties": {
          "confidence": {
            "type": "number",
            "format": "double"
          },
          "coordinates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputNormalizedCoordinates"
            }
          },
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "confidence",
          "coordinates",
          "type",
          "value"
        ]
      },
      "Financial_outputChainLiabilityCandidates": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputNormalizedValueFloat"
            }
          },
          "bank_account_number": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputNormalizedValueStr"
            }
          }
        },
        "required": [
          "amount",
          "bank_account_number"
        ]
      },
      "Financial_outputChainLiabilityComponent": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "bank_account_number": {
            "type": "string",
            "nullable": true
          },
          "candidates": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputChainLiabilityCandidates"
              }
            ],
            "nullable": true
          }
        },
        "required": [
          "amount",
          "bank_account_number",
          "candidates"
        ]
      },
      "Financial_outputCoCNumber": {
        "type": "object",
        "properties": {
          "country_code": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "verifications": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputRelationVerification"
              }
            ],
            "nullable": true
          }
        },
        "required": [
          "country_code",
          "value",
          "verifications"
        ]
      },
      "Financial_outputCocNumberValueStr": {
        "type": "object",
        "properties": {
          "confidence": {
            "type": "number",
            "format": "double"
          },
          "coordinates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputNormalizedCoordinates"
            }
          },
          "country_code": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "verifications": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputRelationVerification"
              }
            ],
            "nullable": true
          }
        },
        "required": [
          "confidence",
          "coordinates",
          "country_code",
          "value",
          "verifications"
        ]
      },
      "Financial_outputComparisonResult": {
        "type": "object",
        "properties": {
          "passed": {
            "type": "boolean",
            "nullable": true
          },
          "rule": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "score": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "weight": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "required": [
          "passed",
          "rule",
          "score",
          "weight"
        ]
      },
      "Financial_outputDataMatchingComponent": {
        "type": "object",
        "properties": {
          "matched_data_sources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputMatchedDataSource"
            }
          }
        },
        "required": [
          "matched_data_sources"
        ]
      },
      "Financial_outputDateDetailsCandidates": {
        "type": "object",
        "properties": {
          "date_of_service_end": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputNormalizedValueStr"
            }
          },
          "date_of_service_start": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputNormalizedValueStr"
            }
          },
          "payment_due_date": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputNormalizedValueStr"
            }
          }
        },
        "required": [
          "date_of_service_end",
          "date_of_service_start",
          "payment_due_date"
        ]
      },
      "Financial_outputDateDetailsComponent": {
        "type": "object",
        "properties": {
          "candidates": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputDateDetailsCandidates"
              }
            ],
            "nullable": true
          },
          "date_of_service_end": {
            "type": "string",
            "nullable": true
          },
          "date_of_service_start": {
            "type": "string",
            "nullable": true
          },
          "payment_due_date": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "candidates",
          "date_of_service_end",
          "date_of_service_start",
          "payment_due_date"
        ]
      },
      "Financial_outputDiscount": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double"
          },
          "date": {
            "type": "string",
            "nullable": true
          },
          "percentage": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "amount",
          "date",
          "percentage",
          "type"
        ]
      },
      "Financial_outputDiscountValue": {
        "type": "object",
        "properties": {
          "amount": {
            "$ref": "#/components/schemas/Financial_outputNormalizedValueFloat"
          },
          "date": {
            "$ref": "#/components/schemas/Financial_outputNormalizedValueStr"
          },
          "percentage": {
            "$ref": "#/components/schemas/Financial_outputNormalizedValueFloat"
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "amount",
          "date",
          "percentage",
          "type"
        ]
      },
      "Financial_outputDistanceTraveled": {
        "type": "object",
        "properties": {
          "unit": {
            "type": "string"
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "unit",
          "value"
        ]
      },
      "Financial_outputDistanceTraveledValue": {
        "type": "object",
        "properties": {
          "unit": {
            "$ref": "#/components/schemas/Financial_outputNormalizedValueStr"
          },
          "value": {
            "$ref": "#/components/schemas/Financial_outputNormalizedValueFloat"
          }
        },
        "required": [
          "unit",
          "value"
        ]
      },
      "Financial_outputDocumentClassifierCandidates": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputDocumentType"
            }
          }
        },
        "required": [
          "value"
        ]
      },
      "Financial_outputDocumentClassifierComponent": {
        "type": "object",
        "properties": {
          "candidates": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputDocumentClassifierCandidates"
              }
            ],
            "nullable": true
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputDocumentType"
            }
          }
        },
        "required": [
          "candidates",
          "value"
        ]
      },
      "Financial_outputDocumentCountryCodeCandidates": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputNormalizedValueStr"
            }
          }
        },
        "required": [
          "value"
        ]
      },
      "Financial_outputDocumentCountryCodeComponent": {
        "type": "object",
        "properties": {
          "candidates": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputDocumentCountryCodeCandidates"
              }
            ],
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "candidates",
          "value"
        ]
      },
      "Financial_outputDocumentLanguageCandidates": {
        "type": "object",
        "properties": {
          "code": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputNormalizedValueStr"
            }
          }
        },
        "required": [
          "code"
        ]
      },
      "Financial_outputDocumentLanguageComponent": {
        "type": "object",
        "properties": {
          "candidates": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputDocumentLanguageCandidates"
              }
            ],
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "candidates",
          "value"
        ]
      },
      "Financial_outputDocumentType": {
        "type": "object",
        "properties": {
          "classification": {
            "type": "string"
          },
          "confidence": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "classification",
          "confidence"
        ]
      },
      "Financial_outputFinancialCandidates": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputNormalizedValueStr"
            }
          },
          "document_date": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputNormalizedValueStr"
            }
          },
          "invoice_number": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputNormalizedValueStr"
            }
          },
          "total_amount": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputNormalizedValueFloat"
            }
          }
        },
        "required": [
          "currency",
          "document_date",
          "invoice_number",
          "total_amount"
        ]
      },
      "Financial_outputFinancialComponent": {
        "type": "object",
        "properties": {
          "candidates": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputFinancialCandidates"
              }
            ],
            "nullable": true
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "customer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputOutputCustomer"
              }
            ],
            "nullable": true
          },
          "document_date": {
            "type": "string",
            "nullable": true
          },
          "invoice_number": {
            "type": "string",
            "nullable": true
          },
          "merchant": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputOutputMerchant"
              }
            ],
            "nullable": true
          },
          "tax_details": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputTaxComponent"
              }
            ],
            "nullable": true
          },
          "total_amount": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "required": [
          "candidates",
          "currency",
          "customer",
          "document_date",
          "invoice_number",
          "merchant",
          "tax_details",
          "total_amount"
        ]
      },
      "Financial_outputHashComponent": {
        "type": "object",
        "properties": {
          "is_duplicate": {
            "type": "boolean",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "is_duplicate",
          "value"
        ]
      },
      "Financial_outputInvoiceReceiptComponents": {
        "type": "object",
        "properties": {
          "amount_details": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputAmountDetailsComponent"
              }
            ],
            "nullable": true
          },
          "barcode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputBarcodeComponent"
              }
            ],
            "nullable": true
          },
          "chain_liability": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputChainLiabilityComponent"
              }
            ],
            "nullable": true
          },
          "data_matching": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputDataMatchingComponent"
              }
            ],
            "nullable": true
          },
          "date_details": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputDateDetailsComponent"
              }
            ],
            "nullable": true
          },
          "document_classification": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputDocumentClassifierComponent"
              }
            ],
            "nullable": true
          },
          "document_country_code": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputDocumentCountryCodeComponent"
              }
            ],
            "nullable": true
          },
          "document_language": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputDocumentLanguageComponent"
              }
            ],
            "nullable": true
          },
          "financial": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputFinancialComponent"
              }
            ],
            "nullable": true
          },
          "hash": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputHashComponent"
              }
            ],
            "nullable": true
          },
          "keyword_matching": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputKeywordMatchingComponent"
              }
            ],
            "nullable": true
          },
          "line_items": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputLineItemsComponent"
              }
            ],
            "nullable": true
          },
          "ocr": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputOcrComponent"
              }
            ],
            "nullable": true
          },
          "payment_details": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputPaymentDetailsComponent"
              }
            ],
            "nullable": true
          },
          "project_code": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputProjectCodeComponent"
              }
            ],
            "nullable": true
          },
          "reference_details": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputReferenceDetailComponents"
              }
            ],
            "nullable": true
          },
          "transport_details": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputTransportDetailsComponent"
              }
            ],
            "nullable": true
          },
          "travel_details": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputTravelDetailsComponent"
              }
            ],
            "nullable": true
          }
        },
        "required": [
          "amount_details",
          "barcode",
          "chain_liability",
          "data_matching",
          "date_details",
          "document_classification",
          "document_country_code",
          "document_language",
          "financial",
          "hash",
          "keyword_matching",
          "line_items",
          "ocr",
          "payment_details",
          "project_code",
          "reference_details",
          "transport_details",
          "travel_details"
        ]
      },
      "Financial_outputKeywordMatch": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "keyword": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "keyword",
          "value"
        ]
      },
      "Financial_outputKeywordMatchingComponent": {
        "type": "object",
        "properties": {
          "matches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputKeywordMatch"
            }
          }
        },
        "required": [
          "matches"
        ]
      },
      "Financial_outputLineComparisonResult": {
        "type": "object",
        "properties": {
          "passed": {
            "type": "boolean",
            "nullable": true
          },
          "rule": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "score": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "weight": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "required": [
          "passed",
          "rule",
          "score",
          "weight"
        ]
      },
      "Financial_outputLineItemComponents": {
        "type": "object",
        "properties": {
          "line_item_matching": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputLineItemMatchingComponent"
              }
            ],
            "nullable": true
          },
          "matched_data_sources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputLineMatchedDataSource"
            }
          }
        },
        "required": [
          "line_item_matching",
          "matched_data_sources"
        ]
      },
      "Financial_outputLineItemKeywordMatch": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "Financial_outputLineItemMatchingComponent": {
        "type": "object",
        "properties": {
          "matches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputLineItemKeywordMatch"
            }
          }
        },
        "required": [
          "matches"
        ]
      },
      "Financial_outputLineItemSection": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputOutputLineItem"
            }
          }
        },
        "required": [
          "items"
        ]
      },
      "Financial_outputLineItemWithValues": {
        "type": "object",
        "properties": {
          "amount": {
            "$ref": "#/components/schemas/Financial_outputValueFloat"
          },
          "amount_each": {
            "$ref": "#/components/schemas/Financial_outputValueFloat"
          },
          "amount_each_ex_vat": {
            "$ref": "#/components/schemas/Financial_outputValueFloat"
          },
          "amount_ex_vat": {
            "$ref": "#/components/schemas/Financial_outputValueFloat"
          },
          "amount_sub_total": {
            "$ref": "#/components/schemas/Financial_outputValueFloat"
          },
          "commission": {
            "$ref": "#/components/schemas/Financial_outputValueFloat"
          },
          "confidence": {
            "type": "number",
            "format": "double"
          },
          "coordinates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputNormalizedCoordinates"
            }
          },
          "currency": {
            "$ref": "#/components/schemas/Financial_outputValueStr"
          },
          "date": {
            "$ref": "#/components/schemas/Financial_outputValueStr"
          },
          "discount_amount": {
            "$ref": "#/components/schemas/Financial_outputValueFloat"
          },
          "discount_code": {
            "$ref": "#/components/schemas/Financial_outputValueStr"
          },
          "discount_percentage": {
            "$ref": "#/components/schemas/Financial_outputValueFloat"
          },
          "ean": {
            "$ref": "#/components/schemas/Financial_outputValueStr"
          },
          "line_number": {
            "$ref": "#/components/schemas/Financial_outputValueStr"
          },
          "matched_data_sources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputLineMatchedDataSource"
            }
          },
          "matched_purchase_order": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputMatchedPurchaseOrderLineItem"
              }
            ],
            "nullable": true
          },
          "order_number": {
            "$ref": "#/components/schemas/Financial_outputValueStr"
          },
          "period": {
            "$ref": "#/components/schemas/Financial_outputValueStr"
          },
          "product_type": {
            "$ref": "#/components/schemas/Financial_outputValueStr"
          },
          "quantity": {
            "$ref": "#/components/schemas/Financial_outputValueFloat"
          },
          "sku": {
            "$ref": "#/components/schemas/Financial_outputValueStr"
          },
          "title": {
            "$ref": "#/components/schemas/Financial_outputValueStr"
          },
          "vat_amount": {
            "$ref": "#/components/schemas/Financial_outputValueFloat"
          },
          "vat_code": {
            "$ref": "#/components/schemas/Financial_outputValueStr"
          },
          "vat_percentage": {
            "$ref": "#/components/schemas/Financial_outputValueFloat"
          }
        },
        "required": [
          "amount",
          "amount_each",
          "amount_each_ex_vat",
          "amount_ex_vat",
          "amount_sub_total",
          "commission",
          "confidence",
          "coordinates",
          "currency",
          "date",
          "discount_amount",
          "discount_code",
          "discount_percentage",
          "ean",
          "line_number",
          "matched_data_sources",
          "matched_purchase_order",
          "order_number",
          "period",
          "product_type",
          "quantity",
          "sku",
          "title",
          "vat_amount",
          "vat_code",
          "vat_percentage"
        ]
      },
      "Financial_outputLineItemsComponent": {
        "type": "object",
        "properties": {
          "line_item_sections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputLineItemSection"
            }
          }
        },
        "required": [
          "line_item_sections"
        ]
      },
      "Financial_outputLineMatchedDataSource": {
        "type": "object",
        "properties": {
          "collection_identifier": {
            "type": "string"
          },
          "comparison_results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputLineComparisonResult"
            }
          },
          "data_source_name": {
            "type": "string"
          },
          "line_identifier": {
            "type": "string"
          }
        },
        "required": [
          "collection_identifier",
          "comparison_results",
          "data_source_name",
          "line_identifier"
        ]
      },
      "Financial_outputMatchedCollection": {
        "type": "object",
        "properties": {
          "collection_identifier": {
            "type": "string",
            "nullable": true
          },
          "comparison_results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputComparisonResult"
            }
          },
          "matched_line_rate": {
            "type": "number",
            "format": "double"
          },
          "remaining_lines_collection": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "remaining_lines_document": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "required": [
          "collection_identifier",
          "comparison_results",
          "matched_line_rate",
          "remaining_lines_collection",
          "remaining_lines_document"
        ]
      },
      "Financial_outputMatchedDataSource": {
        "type": "object",
        "properties": {
          "matched_collections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputMatchedCollection"
            }
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "matched_collections",
          "name"
        ]
      },
      "Financial_outputMatchedPurchaseOrderLineItem": {
        "type": "object",
        "properties": {
          "matched_amount": {
            "type": "boolean",
            "nullable": true
          },
          "matched_amount_each": {
            "type": "boolean",
            "nullable": true
          },
          "matched_quantity": {
            "type": "boolean",
            "nullable": true
          },
          "matched_sku": {
            "type": "boolean",
            "nullable": true
          },
          "matched_title": {
            "type": "boolean",
            "nullable": true
          },
          "matched_title_confidence": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "purchase_order_identifier": {
            "type": "string",
            "nullable": true
          },
          "purchase_order_line_item_identifier": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "matched_amount",
          "matched_amount_each",
          "matched_quantity",
          "matched_sku",
          "matched_title",
          "matched_title_confidence",
          "purchase_order_identifier",
          "purchase_order_line_item_identifier"
        ]
      },
      "Financial_outputNormalizedCoordinates": {
        "type": "object",
        "properties": {
          "file": {
            "type": "integer",
            "format": "int32"
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "vertices": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "double"
              }
            }
          }
        },
        "required": [
          "file",
          "page",
          "vertices"
        ]
      },
      "Financial_outputNormalizedValueFloat": {
        "type": "object",
        "properties": {
          "confidence": {
            "type": "number",
            "format": "double"
          },
          "coordinates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputNormalizedCoordinates"
            }
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "confidence",
          "coordinates",
          "value"
        ]
      },
      "Financial_outputNormalizedValueStr": {
        "type": "object",
        "properties": {
          "confidence": {
            "type": "number",
            "format": "double"
          },
          "coordinates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputNormalizedCoordinates"
            }
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "confidence",
          "coordinates",
          "value"
        ]
      },
      "Financial_outputOcrComponent": {
        "type": "object",
        "properties": {
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputOcrDocument"
            }
          }
        },
        "required": [
          "documents"
        ]
      },
      "Financial_outputOcrDocument": {
        "type": "object",
        "properties": {
          "document_index": {
            "type": "integer",
            "format": "int32"
          },
          "pages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputOcrPage"
            }
          }
        },
        "required": [
          "document_index",
          "pages"
        ]
      },
      "Financial_outputOcrLine": {
        "type": "object",
        "properties": {
          "coordinates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputNormalizedCoordinates"
            }
          },
          "text": {
            "type": "string"
          },
          "words": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputWord"
            }
          }
        },
        "required": [
          "coordinates",
          "text",
          "words"
        ]
      },
      "Financial_outputOcrPage": {
        "type": "object",
        "properties": {
          "height": {
            "type": "integer",
            "format": "int32"
          },
          "lines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputOcrLine"
            }
          },
          "page_index": {
            "type": "integer",
            "format": "int32"
          },
          "text": {
            "type": "string"
          },
          "width": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "height",
          "lines",
          "page_index",
          "text",
          "width"
        ]
      },
      "Financial_outputOutput": {
        "type": "object",
        "properties": {
          "components": {
            "$ref": "#/components/schemas/Financial_outputInvoiceReceiptComponents"
          },
          "version": {
            "type": "string"
          }
        },
        "description": "The response given by the Document Capture API.",
        "required": [
          "components",
          "version"
        ]
      },
      "Financial_outputOutputCustomer": {
        "type": "object",
        "properties": {
          "candidates": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputOutputCustomerCandidates"
              }
            ],
            "nullable": true
          },
          "company_name": {
            "type": "string",
            "nullable": true
          },
          "components": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputRelationComponents"
              }
            ],
            "nullable": true
          },
          "person": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "candidates",
          "company_name",
          "components",
          "person"
        ]
      },
      "Financial_outputOutputCustomerCandidates": {
        "type": "object",
        "properties": {
          "company_name": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputNormalizedValueStr"
            }
          },
          "person": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputNormalizedValueStr"
            }
          }
        },
        "required": [
          "company_name",
          "person"
        ]
      },
      "Financial_outputOutputLineItem": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "amount_each": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "amount_each_ex_vat": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "amount_ex_vat": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "amount_sub_total": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "candidates": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputLineItemWithValues"
              }
            ],
            "nullable": true
          },
          "commission": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "components": {
            "$ref": "#/components/schemas/Financial_outputLineItemComponents"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "discount_amount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "discount_code": {
            "type": "string",
            "nullable": true
          },
          "discount_percentage": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "ean": {
            "type": "string",
            "nullable": true
          },
          "line_number": {
            "type": "string",
            "nullable": true
          },
          "matched_purchase_order": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputMatchedPurchaseOrderLineItem"
              }
            ],
            "nullable": true
          },
          "order_number": {
            "type": "string",
            "nullable": true
          },
          "period": {
            "type": "string",
            "nullable": true
          },
          "product_type": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "sku": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "unit_of_measurement": {
            "type": "string",
            "nullable": true
          },
          "vat_amount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "vat_code": {
            "type": "string",
            "nullable": true
          },
          "vat_percentage": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "required": [
          "amount",
          "amount_each",
          "amount_each_ex_vat",
          "amount_ex_vat",
          "amount_sub_total",
          "candidates",
          "commission",
          "components",
          "currency",
          "date",
          "description",
          "discount_amount",
          "discount_code",
          "discount_percentage",
          "ean",
          "line_number",
          "matched_purchase_order",
          "order_number",
          "period",
          "product_type",
          "quantity",
          "sku",
          "title",
          "unit_of_measurement",
          "vat_amount",
          "vat_code",
          "vat_percentage"
        ]
      },
      "Financial_outputOutputMerchant": {
        "type": "object",
        "properties": {
          "brand_name": {
            "type": "string",
            "nullable": true
          },
          "candidates": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputOutputMerchantCandidates"
              }
            ],
            "nullable": true
          },
          "company_name": {
            "type": "string",
            "nullable": true
          },
          "components": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputRelationComponents"
              }
            ],
            "nullable": true
          }
        },
        "required": [
          "brand_name",
          "candidates",
          "company_name",
          "components"
        ]
      },
      "Financial_outputOutputMerchantCandidates": {
        "type": "object",
        "properties": {
          "brand_name": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputNormalizedValueStr"
            }
          },
          "company_name": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputNormalizedValueStr"
            }
          }
        },
        "required": [
          "brand_name",
          "company_name"
        ]
      },
      "Financial_outputPayment": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "method": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "amount",
          "method"
        ]
      },
      "Financial_outputPaymentCandidate": {
        "type": "object",
        "properties": {
          "amount": {
            "$ref": "#/components/schemas/Financial_outputNormalizedValueFloat"
          },
          "method": {
            "$ref": "#/components/schemas/Financial_outputNormalizedValueStr"
          }
        },
        "required": [
          "amount",
          "method"
        ]
      },
      "Financial_outputPaymentDetailsCandidates": {
        "type": "object",
        "properties": {
          "auth_code": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputNormalizedValueStr"
            }
          },
          "card_account_number": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputNormalizedValueStr"
            }
          },
          "card_issuer": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputNormalizedValueStr"
            }
          },
          "card_number": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputNormalizedValueStr"
            }
          },
          "payment_slip": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputPaymentSlipCandidate"
            }
          },
          "terminal_number": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputNormalizedValueStr"
            }
          }
        },
        "required": [
          "auth_code",
          "card_account_number",
          "card_issuer",
          "card_number",
          "payment_slip",
          "terminal_number"
        ]
      },
      "Financial_outputPaymentDetailsComponent": {
        "type": "object",
        "properties": {
          "auth_code": {
            "type": "string",
            "nullable": true
          },
          "candidates": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputPaymentDetailsCandidates"
              }
            ],
            "nullable": true
          },
          "card_account_number": {
            "type": "string",
            "nullable": true
          },
          "card_issuer": {
            "type": "string",
            "nullable": true
          },
          "card_number": {
            "type": "string",
            "nullable": true
          },
          "payment_slip": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputPaymentSlip"
              }
            ],
            "nullable": true
          },
          "terminal_number": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "auth_code",
          "candidates",
          "card_account_number",
          "card_issuer",
          "card_number",
          "payment_slip",
          "terminal_number"
        ]
      },
      "Financial_outputPaymentSlip": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "customer_number": {
            "type": "string",
            "nullable": true
          },
          "reference_number": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "code",
          "customer_number",
          "reference_number"
        ]
      },
      "Financial_outputPaymentSlipCandidate": {
        "type": "object",
        "properties": {
          "code": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputNormalizedValueStr"
              }
            ],
            "nullable": true
          },
          "customer_number": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputNormalizedValueStr"
              }
            ],
            "nullable": true
          },
          "reference_number": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputNormalizedValueStr"
              }
            ],
            "nullable": true
          }
        },
        "required": [
          "code",
          "customer_number",
          "reference_number"
        ]
      },
      "Financial_outputProjectCodeCandidates": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputNormalizedValueStr"
            }
          }
        },
        "required": [
          "value"
        ]
      },
      "Financial_outputProjectCodeComponent": {
        "type": "object",
        "properties": {
          "candidates": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputProjectCodeCandidates"
              }
            ],
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "candidates",
          "value"
        ]
      },
      "Financial_outputReferenceDetailCandidates": {
        "type": "object",
        "properties": {
          "credit_note_number": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputNormalizedValueStr"
            }
          },
          "order_number": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputNormalizedValueStr"
            }
          },
          "purchase_order_number": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputNormalizedValueStr"
            }
          },
          "shop_number": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputNormalizedValueStr"
            }
          },
          "transaction_number": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputNormalizedValueStr"
            }
          }
        },
        "required": [
          "credit_note_number",
          "order_number",
          "purchase_order_number",
          "shop_number",
          "transaction_number"
        ]
      },
      "Financial_outputReferenceDetailComponents": {
        "type": "object",
        "properties": {
          "candidates": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputReferenceDetailCandidates"
              }
            ],
            "nullable": true
          },
          "credit_note_number": {
            "type": "string",
            "nullable": true
          },
          "order_number": {
            "type": "string",
            "nullable": true
          },
          "purchase_order_number": {
            "type": "string",
            "nullable": true
          },
          "transaction_number": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "candidates",
          "credit_note_number",
          "order_number",
          "purchase_order_number",
          "transaction_number"
        ]
      },
      "Financial_outputRelationCandidates": {
        "type": "object",
        "properties": {
          "activity_code": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputNormalizedValueStr"
            }
          },
          "bank": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputBankDetails"
            }
          },
          "coc_number": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputCocNumberValueStr"
            }
          },
          "email": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputNormalizedValueStr"
            }
          },
          "eori_number": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputNormalizedValueStr"
            }
          },
          "fiscal_number": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputNormalizedValueStr"
            }
          },
          "phone": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputNormalizedValueStr"
            }
          },
          "vat_number": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputVATNumberValueStr"
            }
          },
          "website": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputNormalizedValueStr"
            }
          }
        },
        "required": [
          "activity_code",
          "bank",
          "coc_number",
          "email",
          "eori_number",
          "fiscal_number",
          "phone",
          "vat_number",
          "website"
        ]
      },
      "Financial_outputRelationComponents": {
        "type": "object",
        "properties": {
          "relation_address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputAddressComponent"
              }
            ],
            "nullable": true
          },
          "relation_details": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputRelationDetails"
              }
            ],
            "nullable": true
          },
          "relation_matching": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputRelationMatchingComponent"
              }
            ],
            "nullable": true
          }
        },
        "required": [
          "relation_address",
          "relation_details",
          "relation_matching"
        ]
      },
      "Financial_outputRelationDetails": {
        "type": "object",
        "properties": {
          "activity_code": {
            "type": "string",
            "nullable": true
          },
          "bank": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputBankDetails"
              }
            ],
            "nullable": true
          },
          "candidates": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputRelationCandidates"
              }
            ],
            "nullable": true
          },
          "coc_number": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputCoCNumber"
              }
            ],
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "eori_number": {
            "type": "string",
            "nullable": true
          },
          "fiscal_number": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "vat_number": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputVATNumber"
              }
            ],
            "nullable": true
          },
          "website": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "activity_code",
          "bank",
          "candidates",
          "coc_number",
          "email",
          "eori_number",
          "fiscal_number",
          "phone",
          "vat_number",
          "website"
        ]
      },
      "Financial_outputRelationMatch": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "Financial_outputRelationMatchingComponent": {
        "type": "object",
        "properties": {
          "match": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputRelationMatch"
              }
            ],
            "nullable": true
          }
        },
        "required": [
          "match"
        ]
      },
      "Financial_outputRelationVerification": {
        "type": "object",
        "properties": {
          "is_valid": {
            "type": "boolean",
            "nullable": true
          }
        },
        "required": [
          "is_valid"
        ]
      },
      "Financial_outputTaxComponent": {
        "type": "object",
        "properties": {
          "candidates": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputTaxItemCandidates"
              }
            ],
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputTaxItem"
            }
          }
        },
        "required": [
          "candidates",
          "items"
        ]
      },
      "Financial_outputTaxItem": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double"
          },
          "amount_excl_vat": {
            "type": "number",
            "format": "double"
          },
          "amount_incl_vat": {
            "type": "number",
            "format": "double"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "percentage": {
            "type": "number",
            "format": "double"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "amount",
          "amount_excl_vat",
          "amount_incl_vat",
          "code",
          "percentage",
          "type"
        ]
      },
      "Financial_outputTaxItemCandidates": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputTaxItemValues"
            }
          }
        },
        "required": [
          "items"
        ]
      },
      "Financial_outputTaxItemValues": {
        "type": "object",
        "properties": {
          "amount": {
            "$ref": "#/components/schemas/Financial_outputTaxValueFloat"
          },
          "amount_excl_vat": {
            "$ref": "#/components/schemas/Financial_outputTaxValueFloat"
          },
          "amount_incl_vat": {
            "$ref": "#/components/schemas/Financial_outputTaxValueFloat"
          },
          "code": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputNormalizedValueStr"
              }
            ],
            "nullable": true
          },
          "percentage": {
            "$ref": "#/components/schemas/Financial_outputTaxValueFloat"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "amount",
          "amount_excl_vat",
          "amount_incl_vat",
          "code",
          "percentage",
          "type"
        ]
      },
      "Financial_outputTaxValueFloat": {
        "type": "object",
        "properties": {
          "confidence": {
            "type": "number",
            "format": "double"
          },
          "coordinates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputNormalizedCoordinates"
            }
          },
          "estimated": {
            "type": "boolean",
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "confidence",
          "coordinates",
          "estimated",
          "value"
        ]
      },
      "Financial_outputTransportCandidates": {
        "type": "object",
        "properties": {
          "package_number": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputNormalizedValueStr"
            }
          }
        },
        "required": [
          "package_number"
        ]
      },
      "Financial_outputTransportDetailsComponent": {
        "type": "object",
        "properties": {
          "candidates": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputTransportCandidates"
              }
            ],
            "nullable": true
          },
          "package_number": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "candidates",
          "package_number"
        ]
      },
      "Financial_outputTravelDetailsComponent": {
        "type": "object",
        "properties": {
          "candidates": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputTravelsDetailsCandidates"
              }
            ],
            "nullable": true
          },
          "distance_traveled": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputDistanceTraveled"
              }
            ],
            "nullable": true
          }
        },
        "required": [
          "candidates",
          "distance_traveled"
        ]
      },
      "Financial_outputTravelsDetailsCandidates": {
        "type": "object",
        "properties": {
          "distance_traveled": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputDistanceTraveledValue"
            }
          }
        },
        "required": [
          "distance_traveled"
        ]
      },
      "Financial_outputVATNumber": {
        "type": "object",
        "properties": {
          "country_code": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "verifications": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputRelationVerification"
              }
            ],
            "nullable": true
          }
        },
        "required": [
          "country_code",
          "value",
          "verifications"
        ]
      },
      "Financial_outputVATNumberValueStr": {
        "type": "object",
        "properties": {
          "confidence": {
            "type": "number",
            "format": "double"
          },
          "coordinates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputNormalizedCoordinates"
            }
          },
          "country_code": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "verifications": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Financial_outputRelationVerification"
              }
            ],
            "nullable": true
          }
        },
        "required": [
          "confidence",
          "coordinates",
          "country_code",
          "value",
          "verifications"
        ]
      },
      "Financial_outputValueFloat": {
        "type": "object",
        "properties": {
          "confidence": {
            "type": "number",
            "format": "double"
          },
          "coordinates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputNormalizedCoordinates"
            }
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "confidence",
          "coordinates",
          "value"
        ]
      },
      "Financial_outputValueStr": {
        "type": "object",
        "properties": {
          "confidence": {
            "type": "number",
            "format": "double"
          },
          "coordinates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputNormalizedCoordinates"
            }
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "confidence",
          "coordinates",
          "value"
        ]
      },
      "Financial_outputVerification": {
        "type": "object",
        "properties": {
          "checksum": {
            "type": "boolean",
            "nullable": true
          },
          "length": {
            "type": "boolean",
            "nullable": true
          },
          "structure": {
            "type": "boolean",
            "nullable": true
          }
        },
        "required": [
          "checksum",
          "length",
          "structure"
        ]
      },
      "Financial_outputWord": {
        "type": "object",
        "properties": {
          "coordinates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial_outputNormalizedCoordinates"
            }
          },
          "text": {
            "type": "string"
          }
        },
        "required": [
          "coordinates",
          "text"
        ]
      },
      "FinancialResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Financial_outputOutput"
          },
          "request_id": {
            "type": "string",
            "description": "A request ID for support and debugging purposes."
          },
          "result": {
            "type": "string",
            "description": "Whether the call was successful.",
            "enum": [
              "success",
              "error"
            ]
          }
        },
        "required": [
          "data",
          "data",
          "request_id",
          "result"
        ]
      },
      "Generic_captureXLSXResponse": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Document_toolkitOutput"
              }
            ],
            "nullable": true
          },
          "request_id": {
            "type": "string",
            "description": "A request ID for support and debugging purposes."
          },
          "result": {
            "type": "string",
            "description": "Whether the call was successful.",
            "enum": [
              "success",
              "error"
            ]
          }
        },
        "required": [
          "data",
          "data",
          "request_id",
          "result"
        ]
      },
      "Generic_document_inputDocument": {
        "type": "object",
        "properties": {
          "content_type": {
            "type": "string",
            "description": "The content type of the file, if not given we will try to detect this.",
            "nullable": true
          },
          "data": {
            "type": "string",
            "description": "The raw file data of the document in base64.",
            "nullable": true
          },
          "file_id": {
            "type": "string",
            "description": "The file ID in the Storage API of the document to process.",
            "nullable": true
          },
          "filename": {
            "type": "string",
            "description": "The name of the file.",
            "nullable": true
          },
          "page_ranges": {
            "type": "string",
            "description": "The page ranges of this document to use in the capture. Duplicate entries will be removed. If none given, all pages will be parsed. Ranges are like '1-3,5', which will result in a parse of pages 1, 2, 3 and 5. You can use the keywords first and last. You can prepend a page number to start counting from the end. Examples: use '2-last' for the second page until the last page, use '3-r1' for page 3 until the second-last page. Invalid page numbers will be skipped. This feature only works for files with multiple pages like PDF."
          },
          "password": {
            "type": "string",
            "description": "If the file is password protected, enter the password here. Only affects files that are password protected.",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "The URL to download as document. The request should be completed within 30 seconds.",
            "nullable": true
          }
        },
        "required": [
          "content_type",
          "data",
          "file_id",
          "filename",
          "page_ranges",
          "password",
          "url"
        ]
      },
      "Generic_document_inputInputPreset": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "description": "The slug of the preset to use while processing the document(s)."
          }
        },
        "description": "The preset configuration to use while processing the document(s).",
        "required": [
          "slug"
        ]
      },
      "GenericOutput": {
        "type": "object",
        "properties": {
          "components": {
            "$ref": "#/components/schemas/GenericOutputInlineComponents"
          },
          "version": {
            "type": "string"
          }
        },
        "description": "The output of the generic parser.",
        "required": [
          "components",
          "version"
        ]
      },
      "GenericOutputInlineComponentKeyValuePairs": {
        "type": "object",
        "properties": {
          "key_value_pairs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GenericOutputInlineKeyValuePair"
            }
          }
        },
        "required": [
          "key_value_pairs"
        ]
      },
      "GenericOutputInlineComponentTables": {
        "type": "object",
        "properties": {
          "tables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GenericOutputInlineTable"
            }
          }
        },
        "required": [
          "tables"
        ]
      },
      "GenericOutputInlineComponents": {
        "type": "object",
        "properties": {
          "key_value_pairs": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GenericOutputInlineComponentKeyValuePairs"
              }
            ],
            "nullable": true
          },
          "tables": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GenericOutputInlineComponentTables"
              }
            ],
            "nullable": true
          }
        },
        "required": [
          "key_value_pairs",
          "tables"
        ]
      },
      "GenericOutputInlineKeyValuePair": {
        "type": "object",
        "properties": {
          "document": {
            "type": "integer",
            "description": "The index of the document that this key-value pair belongs to.",
            "format": "int32"
          },
          "key": {
            "type": "object",
            "properties": {
              "content": {
                "type": "string"
              }
            },
            "required": [
              "content"
            ]
          },
          "value": {
            "type": "object",
            "properties": {
              "content": {
                "type": "string"
              }
            },
            "required": [
              "content"
            ]
          }
        },
        "required": [
          "document",
          "key",
          "value"
        ]
      },
      "GenericOutputInlineTable": {
        "type": "object",
        "properties": {
          "cells": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GenericOutputInlineTableCell"
            }
          },
          "column_count": {
            "type": "integer",
            "format": "int32"
          },
          "document": {
            "type": "integer",
            "description": "The index of the document that this table belongs to.",
            "format": "int32"
          },
          "row_count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "cells",
          "column_count",
          "document",
          "row_count"
        ]
      },
      "GenericOutputInlineTableCell": {
        "type": "object",
        "properties": {
          "column_index": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "string"
          },
          "header": {
            "type": "boolean"
          },
          "row_index": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "column_index",
          "content",
          "header",
          "row_index"
        ]
      },
      "GenericResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/GenericOutput"
          },
          "request_id": {
            "type": "string",
            "description": "A request ID for support and debugging purposes."
          },
          "result": {
            "type": "string",
            "description": "Whether the call was successful.",
            "enum": [
              "success",
              "error"
            ]
          }
        },
        "required": [
          "data",
          "data",
          "request_id",
          "result"
        ]
      },
      "HitlHitlConfig": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "description": "The slug of the Human in the Loop configuration to use."
          }
        },
        "description": "The configuration of Human in the Loop of this job. This is optional to include in async requests",
        "required": [
          "slug"
        ]
      },
      "Prompt_builder_captureConfigurationsOutputConfiguration": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "slug"
        ]
      },
      "Prompt_builder_captureConfigurationsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Prompt_builder_captureConfigurationsOutputConfiguration"
            },
            "description": "The list of available configurations."
          },
          "request_id": {
            "type": "string",
            "description": "A request ID for support and debugging purposes."
          },
          "result": {
            "type": "string",
            "description": "Whether the call was successful.",
            "enum": [
              "success",
              "error"
            ]
          }
        },
        "required": [
          "data",
          "data",
          "request_id",
          "result"
        ]
      },
      "Prompt_builder_captureSchemaOutput": {
        "type": "object",
        "properties": {
          "schema": {
            "type": "object",
            "additionalProperties": {}
          }
        },
        "description": "The schema of the prompt builder configuration.",
        "required": [
          "schema"
        ]
      },
      "Prompt_builder_captureSchemaResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Prompt_builder_captureSchemaOutput"
          },
          "request_id": {
            "type": "string",
            "description": "A request ID for support and debugging purposes."
          },
          "result": {
            "type": "string",
            "description": "Whether the call was successful.",
            "enum": [
              "success",
              "error"
            ]
          }
        },
        "required": [
          "data",
          "data",
          "request_id",
          "result"
        ]
      },
      "Prompt_builderResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "additionalProperties": {},
            "description": "The output of the prompt builder capture."
          },
          "request_id": {
            "type": "string",
            "description": "A request ID for support and debugging purposes."
          },
          "result": {
            "type": "string",
            "description": "Whether the call was successful.",
            "enum": [
              "success",
              "error"
            ]
          }
        },
        "required": [
          "data",
          "data",
          "request_id",
          "result"
        ]
      },
      "ResponseSerializableError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "The code of the error.",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "description": "The human message of the error."
          },
          "request_id": {
            "type": "string",
            "description": "A request ID for support and debugging purposes."
          },
          "result": {
            "type": "string",
            "description": "Whether the call was successful.",
            "enum": [
              "success",
              "error"
            ]
          }
        },
        "required": [
          "code",
          "message",
          "request_id",
          "result"
        ]
      },
      "ResponseSuccess": {
        "type": "object",
        "properties": {
          "data": {
            "description": "Value of any type, including null",
            "nullable": true
          },
          "request_id": {
            "type": "string",
            "description": "A request ID for support and debugging purposes."
          },
          "result": {
            "type": "string",
            "description": "Whether the call was successful.",
            "enum": [
              "success",
              "error"
            ]
          }
        },
        "required": [
          "data",
          "request_id",
          "result"
        ]
      },
      "SharedHitlStatus": {
        "type": "object",
        "properties": {
          "custom_reject_reason": {
            "type": "string",
            "description": "A freely typed rejection reason provided by the reviewer.",
            "nullable": true
          },
          "finished_number_of_rounds": {
            "type": "integer",
            "description": "The number of finished review rounds of a review job.",
            "format": "int32"
          },
          "has_custom_reject_reason": {
            "type": "boolean",
            "description": "Whether or not a reviewer has provided a custom reason."
          },
          "reject_reason": {
            "type": "string",
            "description": "The reason why the review job has been rejected.",
            "nullable": true
          },
          "rejected": {
            "type": "boolean",
            "description": "Whether or not a review job has been rejected."
          },
          "total_number_of_rounds": {
            "type": "integer",
            "description": "The total number review rounds of a review job.",
            "format": "int32"
          }
        },
        "description": "Extended status information regarding the Human in the Loop process of an async job.",
        "required": [
          "custom_reject_reason",
          "finished_number_of_rounds",
          "has_custom_reject_reason",
          "reject_reason",
          "rejected",
          "total_number_of_rounds"
        ]
      },
      "SharedJob": {
        "type": "object",
        "properties": {
          "create_time": {
            "type": "string",
            "description": "The time at which the job was created.",
            "format": "date-time"
          },
          "job_id": {
            "type": "string",
            "description": "This is the jobId with which you can retrieve results, status and logs of the job"
          },
          "status": {
            "type": "string",
            "description": "The current status of the job"
          }
        },
        "required": [
          "create_time",
          "job_id",
          "status"
        ]
      },
      "SharedJobs": {
        "type": "object",
        "properties": {
          "jobs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SharedJob"
            }
          },
          "paging_data": {
            "$ref": "#/components/schemas/SharedPagingData"
          }
        },
        "required": [
          "jobs",
          "paging_data"
        ]
      },
      "SharedLog": {
        "type": "object",
        "properties": {
          "create_time": {
            "type": "string",
            "description": "The time at which this log was created.",
            "format": "date-time"
          },
          "message": {
            "type": "string",
            "description": "The error or info message."
          }
        },
        "required": [
          "create_time",
          "message"
        ]
      },
      "SharedLogs": {
        "type": "object",
        "properties": {
          "logs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SharedLog"
            }
          },
          "paging_data": {
            "$ref": "#/components/schemas/SharedPagingData"
          }
        },
        "required": [
          "logs",
          "paging_data"
        ]
      },
      "SharedPagingData": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "more_results": {
            "type": "boolean"
          },
          "pages": {
            "type": "integer",
            "format": "int64"
          },
          "per_page": {
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "count",
          "more_results",
          "pages",
          "per_page"
        ]
      },
      "SharedReturnJobStatus": {
        "type": "object",
        "properties": {
          "create_time": {
            "type": "string",
            "description": "The time at which the job was created.",
            "format": "date-time"
          },
          "hitl": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SharedHitlStatus"
              }
            ],
            "nullable": true
          },
          "job_id": {
            "type": "string",
            "description": "This is the jobId with which you can retrieve results, status and logs of the job"
          },
          "status": {
            "type": "string",
            "description": "The current status of the job"
          }
        },
        "description": "The status of a document job.",
        "required": [
          "create_time",
          "hitl",
          "job_id",
          "status"
        ]
      },
      "Storage-File-CreateInput": {
        "type": "object",
        "properties": {
          "content_type": {
            "type": "string",
            "description": "The content type of the file, if not given we will try to detect this.",
            "nullable": true
          },
          "data": {
            "type": "string",
            "description": "The raw file data of the document in base64.",
            "nullable": true
          },
          "filename": {
            "type": "string",
            "description": "The filename of the uploaded file.",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "The URL to download as file. The request should be completed within 30 seconds.",
            "nullable": true
          }
        },
        "required": [
          "content_type",
          "data",
          "filename",
          "url"
        ]
      },
      "StorageCreateOutput": {
        "type": "object",
        "properties": {
          "file_id": {
            "type": "string",
            "description": "The identifier of the uploaded file."
          }
        },
        "description": "The response object of the Document Toolkit API render operation.",
        "required": [
          "file_id"
        ]
      },
      "StorageCreateResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/StorageCreateOutput"
          },
          "request_id": {
            "type": "string",
            "description": "A request ID for support and debugging purposes."
          },
          "result": {
            "type": "string",
            "description": "Whether the call was successful.",
            "enum": [
              "success",
              "error"
            ]
          }
        },
        "required": [
          "data",
          "data",
          "request_id",
          "result"
        ]
      },
      "Webhooks_configWebhookConfig": {
        "type": "object",
        "properties": {
          "auth": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Webhooks_configWebhookConfigAuth"
              }
            ],
            "nullable": true
          },
          "custom_headers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Webhooks_configWebhookConfigCustomHeader"
            },
            "description": "Any custom headers you would like to set we should send along.",
            "nullable": true
          },
          "types": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "on_finish",
                "on_status_update"
              ]
            },
            "description": "The type of webhooks we should return. 'on_finish' will send a webhook when the task is finished with the full response of the parser. 'on_status_update' will send a webhook everytime the tasks status updates. You can also select both types to get updates and the result at the end."
          },
          "url": {
            "type": "string",
            "description": "Where the webhook needs to be send to."
          }
        },
        "description": "The configuration for the webhook of this job. This is optional to include in async requests.",
        "required": [
          "auth",
          "custom_headers",
          "types",
          "url"
        ]
      },
      "Webhooks_configWebhookConfigAuth": {
        "type": "object",
        "properties": {
          "authorization_header": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Webhooks_configWebhookConfigAuthAuthorizationHeader"
              }
            ],
            "nullable": true
          },
          "basic_auth": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Webhooks_configWebhookConfigAuthBasicAuth"
              }
            ],
            "nullable": true
          }
        },
        "description": "The auth config for your own endpoint we should use",
        "required": [
          "authorization_header",
          "basic_auth"
        ]
      },
      "Webhooks_configWebhookConfigAuthAuthorizationHeader": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "The authorization token you want to use."
          },
          "type": {
            "type": "string",
            "description": "The token type of your authorization token. For example 'Bearer'."
          }
        },
        "description": "The authorization header object where you can fill in the authorization type and token. Only needed if you set the auth type to 'authorization_header'",
        "required": [
          "token",
          "type"
        ]
      },
      "Webhooks_configWebhookConfigAuthBasicAuth": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        },
        "description": "The basic auth header object where you can fill in a username and password with which you want the webhook to authenticate with. Only needed if you set the auth type to 'basic_auth'",
        "required": [
          "password",
          "username"
        ]
      },
      "Webhooks_configWebhookConfigCustomHeader": {
        "type": "object",
        "properties": {
          "header_key": {
            "type": "string"
          },
          "header_value": {
            "type": "string"
          }
        },
        "required": [
          "header_key",
          "header_value"
        ]
      }
    },
    "securitySchemes": {
      "apiKey": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key"
      }
    }
  },
  "tags": [
    {
      "name": "Auth API",
      "description": "API endpoints related to the authentication on the platform."
    },
    {
      "name": "Document Capturing API",
      "description": "Generic document capturing API methods"
    },
    {
      "name": "Document Toolkit API",
      "description": "API to manipulate documents"
    },
    {
      "name": "Financial Document Capturing API",
      "description": "API to capture document data with the financial model"
    },
    {
      "name": "Generic Document Capturing API",
      "description": "API to capture document data with the generic model"
    },
    {
      "name": "Prompt Builder Document Capturing API",
      "description": "API to capture document data with prompt builder configurations"
    },
    {
      "name": "Storage API",
      "description": "API to manage files stored on the DocHorizon platform"
    }
  ],
  "security": [
    {
      "apiKey": []
    }
  ]
}